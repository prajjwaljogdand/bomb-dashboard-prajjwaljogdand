{"version":3,"sources":["assets/img/dashboard-bg.png","views/Dashboard/components/BondAction.tsx","views/Dashboard/components/Bonds.js","views/Dashboard/Dashboard.js","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","hooks/useBondStats.ts","hooks/useCashPriceInLastTWAP.ts","hooks/useBondsPurchasable.ts","bomb-finance/constants.ts","hooks/useCatchError.ts","components/Button/Button.tsx","views/Bond/components/ExchangeModal.tsx"],"names":["module","exports","StyledCardActions","styled","div","props","theme","spacing","BondAction","action","fromToken","fromTokenName","priceDesc","toToken","toTokenName","onExchange","disabled","disabledDescription","catchError","useCatchError","Treasury","useBombFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","ExchangeModal","title","description","max","onConfirm","value","onDismiss","tokenName","onPresent","Grid","item","md","ApprovalState","APPROVED","Button","className","onClick","PENDING","UNKNOWN","StyledBond","StyledPaper","Title","SubTitle","BackgroundImage","createGlobalStyle","DashboardBG","Bonds","account","useWallet","bombFinance","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","useCashPriceInLastTWAP","bondsPurchasable","useBondsPurchasable","bondBalance","BBOND","handleBuyBonds","useCallback","amount","a","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","useMemo","gt","BOND_REDEEM_PRICE_BN","isBondPurchasable","tokenInFtm","price","Box","sx","flexGrow","container","getDisplayBalance","pt","BOMB","BOND_REDEEM_PRICE","UnlockWallet","Dashboard","Page","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","console","error","response","symbol","approval","tokenAddress","style","position","top","left","transform","AccountButton","useState","stat","setStat","slowRefresh","useRefresh","useEffect","getBondStat","fetchBondPrice","setPrice","fetchCashPrice","getBombPriceInLastTWAP","catch","err","stack","refreshInterval","setInterval","config","clearInterval","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","mul","addPopup","useAddPopup","promise","message","includes","StyledButton","button","color","grey","boxShadow","fontSize","size","padding","undefined","StyledLink","Link","StyledExternalLink","buttonColor","buttonSize","buttonPadding","children","href","text","to","variant","useContext","ThemeContext","teal","primary","main","ButtonChild","target","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","Label","ModalActions"],"mappings":"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","file":"static/js/18.416cb3ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard-bg.2cc6be34.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from '../../../views/Bond/components/ExchangeModal';\r\nimport ERC20 from '../../../bomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\n\r\n// Bond action is component which accepts data in props for exchange between BBOND and BOMB \r\n\r\nconst BondAction: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n\r\n  const {\r\n    contracts: { Treasury },\r\n  } = useBombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  \r\n  return (\r\n    <Grid item md={6}>\r\n      <StyledCardActions>\r\n        {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n          <Button\r\n            className=\"newShinyButton\"\r\n            disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n            onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n          >\r\n            {`${action}`}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={disabled ? 'newShinyButtonDisabled' : 'newShinyButton'}\r\n            onClick={onPresent}\r\n            disabled={disabled}\r\n          >\r\n            {disabledDescription || action}\r\n          </Button>\r\n        )}\r\n      </StyledCardActions>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default BondAction;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport DashboardBG from '../../../assets/img/dashboard-bg.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport { useWallet } from 'use-wallet';\r\nimport UnlockWallet from '../../../components/UnlockWallet';\r\nimport useBondStats from '../../../hooks/useBondStats';\r\nimport useCashPriceInLastTWAP from '../../../hooks/useCashPriceInLastTWAP';\r\nimport { useTransactionAdder } from '../../../state/transactions/hooks';\r\nimport useBondsPurchasable from '../../../hooks/useBondsPurchasable';\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../../bomb-finance/constants';\r\nimport BondAction from './BondAction';\r\n\r\nconst Bonds = () => {\r\n  const { account } = useWallet();\r\n  const bombFinance = useBombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const bondsPurchasable = useBondsPurchasable();\r\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount) => {\r\n      const tx = await bombFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\r\n      });\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount) => {\r\n      const tx = await bombFinance.redeemBonds(amount);\r\n      addTransaction(tx, { summary: `Redeem ${amount} BBOND` });\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n  \r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\r\n  const price = Number(bondStat?.tokenInFtm).toFixed(8) / 10000 || '-';\r\n\r\n  return (\r\n    <div>\r\n      <BackgroundImage />\r\n      {!!account ? (\r\n        <StyledBond>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <StyledPaper>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={7} container spacing={2}>\r\n                  <Grid item md={12}>\r\n                    <Title>Bonds</Title>\r\n                    <SubTitle>\r\n                      BBOND can be purchased only on contraction periods, when TWAP of BOMB is below 1\r\n                    </SubTitle>\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <SubTitle>Current Price: (Bomb)^2</SubTitle>\r\n                    <Title>{`BBOND = ${price} BTC`}</Title>\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <SubTitle>Available to redeem:</SubTitle>\r\n                    <Title>{getDisplayBalance(bondBalance)}</Title>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid pt={4} item md={5} container spacing={2}>\r\n                  <Grid item container md={12} spacing={2}>\r\n                    <Grid item md={6}>\r\n                      <SubTitle>\r\n                        Purchase BBond <br />\r\n                        Bomb is over peg\r\n                      </SubTitle>\r\n                    </Grid>\r\n                    <BondAction\r\n                      action=\"Purchase\"\r\n                      fromToken={bombFinance.BOMB}\r\n                      fromTokenName=\"BOMB\"\r\n                      toToken={bombFinance.BBOND}\r\n                      toTokenName=\"BBOND\"\r\n                      priceDesc={\r\n                        !isBondPurchasable\r\n                          ? 'BOMB is over peg'\r\n                          : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\r\n                      }\r\n                      onExchange={handleBuyBonds}\r\n                      disabled={!bondStat || isBondRedeemable}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item container md={12} spacing={2}>\r\n                    <Grid item md={6}>\r\n                      <SubTitle>Redeem Bomb</SubTitle>\r\n                    </Grid>\r\n                    <BondAction\r\n                      action=\"Redeem\"\r\n                      fromToken={bombFinance.BBOND}\r\n                      fromTokenName=\"BBOND\"\r\n                      toToken={bombFinance.BOMB}\r\n                      toTokenName=\"BOMB\"\r\n                      priceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\r\n                      onExchange={handleRedeemBonds}\r\n                      // disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                      disabled={false}\r\n                      disabledDescription={\r\n                        !isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </StyledPaper>\r\n          </Box>\r\n        </StyledBond>\r\n      ) : (\r\n        <UnlockWallet />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst StyledPaper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  background: rgba(35, 40, 75, 0.75);\r\n  border: 1px solid #728cdf;\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 10px;\r\n  color: white;\r\n  padding: 20px;\r\n`;\r\nconst Title = styled.div`\r\n  font-family: 'Nunito', sans-serif;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 22px;\r\n  line-height: 30px;\r\n`;\r\nconst SubTitle = styled.div`\r\n  font-family: 'Nunito', sans-serif;\r\n  color: white;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 19px;\r\n`;\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${DashboardBG}) repeat !important;\r\n    background-size: cover !important;\r\n    background-color: #0C1125 !important;\r\n    padding : 0 !important;\r\n    margin : 0 !important;\r\n    background-position: center !important;\r\n    width : 100%;\r\n  }\r\n`;\r\n\r\nexport default Bonds;\r\n","import React from 'react';\r\nimport Bonds from './components/Bonds';\r\nimport Page from '../../components/Page';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Page>\r\n          <Bonds />\r\n        </Page>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {TokenStat} from '../bomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useBondStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const {slowRefresh} = useRefresh();\r\n  const bombFinance = useBombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondPrice() {\r\n      try {\r\n        setStat(await bombFinance.getBondStat());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondPrice();\r\n  }, [setStat, bombFinance, slowRefresh]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useBondStats;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport config from '../config';\r\nimport {BigNumber} from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\r\n  }, [bombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, bombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import {useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\n//import ERC20 from '../bomb-finance/ERC20';\r\nimport useBombFinance from './useBombFinance';\r\n//import config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n      try {\r\n        setBalance(await bombFinance.getBondsPurchasable());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, bombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import {BigNumber} from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(14);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import {useCallback} from 'react';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({error: {message, stack: err.stack}});\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React, {useContext, useMemo} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  href?: string;\r\n  onClick?: () => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  to?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({children, disabled, href, onClick, size, text, to, variant}) => {\r\n  const {color, spacing} = useContext(ThemeContext);\r\n\r\n  let buttonColor: string;\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.teal[200];\r\n      break;\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main;\r\n  }\r\n\r\n  let boxShadow: string;\r\n  let buttonSize: number;\r\n  let buttonPadding: number;\r\n  let fontSize: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3];\r\n      buttonSize = 36;\r\n      fontSize = 14;\r\n      break;\r\n    case 'lg':\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 72;\r\n      fontSize = 16;\r\n      break;\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 56;\r\n      fontSize = 16;\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>;\r\n    } else if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  }, [href, text, to]);\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string;\r\n  color: string;\r\n  disabled?: boolean;\r\n  fontSize: number;\r\n  padding: number;\r\n  size: number;\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${(props) => props.boxShadow};\r\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    color: ${(props) => props.theme.color.grey[900]};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n"],"sourceRoot":""}