{"version":3,"sources":["views/Bond/components/ExchangeCard.tsx","views/Bond/components/ExchangeStat.tsx","views/Bond/Bond.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","assets/img/background.jpg","components/Spacer/Spacer.tsx","hooks/useBondStats.ts","hooks/useCashPriceInLastTWAP.ts","hooks/useBondsPurchasable.ts","bomb-finance/constants.ts","hooks/useCatchError.ts","components/Button/Button.tsx","views/Bond/components/ExchangeModal.tsx","components/PageHeader/PageHeader.tsx"],"names":["StyledCardTitle","styled","div","props","theme","spacing","StyledCardIcon","color","grey","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","action","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabled","disabledDescription","catchError","useCatchError","Treasury","useBombFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","ExchangeModal","title","description","max","onConfirm","value","onDismiss","tokenName","onPresent","Card","CardContent","TokenSymbol","symbol","size","Label","text","variant","icon","faArrowRight","ApprovalState","APPROVED","Button","className","onClick","PENDING","UNKNOWN","ExchangeStat","price","BackgroundImage","createGlobalStyle","HomeImage","StyledBond","StyledCardWrapper","StyledStatsWrapper","Bond","path","useRouteMatch","account","useWallet","bombFinance","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","useCashPriceInLastTWAP","bondsPurchasable","useBondsPurchasable","bondBalance","BBOND","handleBuyBonds","useCallback","amount","a","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","useMemo","gt","BOND_REDEEM_PRICE_BN","isBondPurchasable","tokenInFtm","bondScale","Page","Helmet","exact","PageHeader","subtitle","BOMB","getDisplayBalance","Spacer","eq","BOND_REDEEM_PRICE","UnlockWallet","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","console","error","response","approval","tokenAddress","Box","style","position","top","left","transform","AccountButton","module","exports","StyledSpacer","s","useContext","ThemeContext","useState","stat","setStat","slowRefresh","useRefresh","useEffect","getBondStat","fetchBondPrice","setPrice","fetchCashPrice","getBombPriceInLastTWAP","catch","err","stack","refreshInterval","setInterval","config","clearInterval","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","mul","addPopup","useAddPopup","promise","message","includes","StyledButton","button","boxShadow","fontSize","padding","undefined","StyledLink","Link","StyledExternalLink","buttonColor","buttonSize","buttonPadding","children","href","to","teal","primary","main","ButtonChild","target","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","ModalActions","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3"],"mappings":"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","file":"static/js/13.595aea91.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Button, Card} from '@material-ui/core';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\nimport CardContent from '../../../components/CardContent';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\nimport Label from '../../../components/Label';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowRight} from '@fortawesome/free-solid-svg-icons';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../bomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: {Treasury},\r\n  } = useBombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\r\n          <StyledExchanger>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\r\n              </StyledCardIcon>\r\n              <Label text={fromTokenName} variant=\"yellow\" />\r\n            </StyledToken>\r\n            <StyledExchangeArrow>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </StyledExchangeArrow>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={toToken.symbol} size={54} />\r\n              </StyledCardIcon>\r\n              <Label text={toTokenName} variant=\"yellow\" />\r\n            </StyledToken>\r\n          </StyledExchanger>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                className=\"shinyButton\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className={disabled ? 'shinyButtonDisabled' : 'shinyButton'}\r\n                onClick={onPresent}\r\n                disabled={disabled}\r\n              >\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  color: #f9d749;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  width: 72px;\r\n  height: 72px;\r\n  border-radius: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledExchanger = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n`;\r\n\r\nconst StyledExchangeArrow = styled.div`\r\n  font-size: 20px;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledToken = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledDesc = styled.span``;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default ExchangeCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Card} from '@material-ui/core';\r\n\r\ninterface ExchangeStatProps {\r\n  tokenName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({tokenName, description, price}) => {\r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} BTC`}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  //color: ${(props) => props.theme.color.grey[300]};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nexport default ExchangeStat;\r\n","import React, {useCallback, useMemo} from 'react';\r\nimport Page from '../../components/Page';\r\nimport {createGlobalStyle} from 'styled-components';\r\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\r\nimport {useWallet} from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport useBondStats from '../../hooks/useBondStats';\r\n//import useBombStats from '../../hooks/useBombStats';\r\nimport useBombFinance from '../../hooks/useBombFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport {useTransactionAdder} from '../../state/transactions/hooks';\r\nimport ExchangeStat from './components/ExchangeStat';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\r\nimport {getDisplayBalance} from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\r\n\r\n\r\n\r\nimport HomeImage from '../../assets/img/background.jpg';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${HomeImage}) repeat !important;\r\n    background-size: cover !important;\r\n    background-color: #171923;\r\n  }\r\n`;\r\nconst TITLE = 'bomb.money | Bonds'\r\n\r\nconst Bond: React.FC = () => {\r\n  const {path} = useRouteMatch();\r\n  const {account} = useWallet();\r\n  const bombFinance = useBombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  //const bombStat = useBombStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n\r\n  const bondsPurchasable = useBondsPurchasable();\r\n\r\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\r\n  //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await bombFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\r\n      });\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await bombFinance.redeemBonds(amount);\r\n      addTransaction(tx, {summary: `Redeem ${amount} BBOND`});\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\r\n  \r\n// console.log(\"bondstat\", Number(bondStat?.tokenInFtm))\r\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4); \r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n              <Helmet>\r\n        <title>{TITLE}</title>\r\n      </Helmet>\r\n        {!!account ? (\r\n          <>\r\n            <Route exact path={path}>\r\n              <PageHeader icon={'💣'} title=\"Buy &amp; Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\r\n            </Route>\r\n            {/* {isBondPayingPremium === false ? (\r\n\r\n\r\n              <Box mt={5}>\r\n                <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '18px', display: 'flex' }}>\r\n                <Alert variant=\"filled\" severity=\"error\">\r\n                    <b>\r\n                      Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!</b>\r\n              </Alert>\r\n            \r\n              </Grid>\r\n              </Box>\r\n            ) : <></>} */}\r\n          \r\n            <StyledBond>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={bombFinance.BOMB}\r\n                  fromTokenName=\"BOMB\"\r\n                  toToken={bombFinance.BBOND}\r\n                  toTokenName=\"BBOND\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'BOMB is over peg'\r\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n              </StyledCardWrapper>\r\n              <StyledStatsWrapper>\r\n                <ExchangeStat\r\n                  tokenName=\"10,000 BOMB\"\r\n                  description=\"Last-Hour TWAP Price\"\r\n                  //price={Number(bombStat?.tokenInFtm).toFixed(4) || '-'}\r\n                 price={bondScale || '-'}\r\n\r\n                />\r\n                <Spacer size=\"md\" />\r\n                <ExchangeStat\r\n                  tokenName=\"10,000 BBOND\"\r\n                  description=\"Current Price: (BOMB)^2\"\r\n                  price={Number(bondStat?.tokenInFtm).toFixed(4) || '-'}\r\n                />\r\n              </StyledStatsWrapper>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={bombFinance.BBOND}\r\n                  fromTokenName=\"BBOND\"\r\n                  toToken={bombFinance.BOMB}\r\n                  toTokenName=\"BOMB\"\r\n                  priceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null}\r\n                />\r\n              </StyledCardWrapper>\r\n            </StyledBond>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledStatsWrapper = styled.div`\r\n  display: flex;\r\n  flex: 0.8;\r\n  margin: 0 20px;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nexport default Bond;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","module.exports = __webpack_public_path__ + \"static/media/background.3761c6a5.jpg\";","import React, {useContext} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\r\n  const {spacing} = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {TokenStat} from '../bomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useBondStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const {slowRefresh} = useRefresh();\r\n  const bombFinance = useBombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondPrice() {\r\n      try {\r\n        setStat(await bombFinance.getBondStat());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondPrice();\r\n  }, [setStat, bombFinance, slowRefresh]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useBondStats;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport config from '../config';\r\nimport {BigNumber} from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\r\n  }, [bombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, bombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import {useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\n//import ERC20 from '../bomb-finance/ERC20';\r\nimport useBombFinance from './useBombFinance';\r\n//import config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n      try {\r\n        setBalance(await bombFinance.getBondsPurchasable());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, bombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import {BigNumber} from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(14);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import {useCallback} from 'react';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({error: {message, stack: err.stack}});\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React, {useContext, useMemo} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  href?: string;\r\n  onClick?: () => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  to?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({children, disabled, href, onClick, size, text, to, variant}) => {\r\n  const {color, spacing} = useContext(ThemeContext);\r\n\r\n  let buttonColor: string;\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.teal[200];\r\n      break;\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main;\r\n  }\r\n\r\n  let boxShadow: string;\r\n  let buttonSize: number;\r\n  let buttonPadding: number;\r\n  let fontSize: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3];\r\n      buttonSize = 36;\r\n      fontSize = 14;\r\n      break;\r\n    case 'lg':\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 72;\r\n      fontSize = 16;\r\n      break;\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 56;\r\n      fontSize = 16;\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>;\r\n    } else if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  }, [href, text, to]);\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string;\r\n  color: string;\r\n  disabled?: boolean;\r\n  fontSize: number;\r\n  padding: number;\r\n  size: number;\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${(props) => props.boxShadow};\r\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    color: ${(props) => props.theme.color.grey[900]};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 512px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: '#f9d749';\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n"],"sourceRoot":""}