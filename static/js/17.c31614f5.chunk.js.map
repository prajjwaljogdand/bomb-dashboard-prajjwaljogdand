{"version":3,"sources":["views/Stake/components/DepositModal.tsx","views/Stake/components/WithdrawModal.tsx","hooks/useStakeToBomb.ts","hooks/useWithdrawFromBomb.ts","hooks/useXbombBalance.ts","views/Stake/components/Stake.tsx","hooks/useXbombAPR.ts","hooks/useTotalStakedBombBalance.ts","hooks/useFetchBombAPR.ts","views/Stake/Stake.js","hooks/useHandleTransactionReceipt.ts","hooks/useApprove.ts","components/CardIcon/CardIcon.tsx","components/UnlockWallet/UnlockWallet.tsx","assets/img/background.jpg","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js"],"names":["DepositModal","max","onConfirm","onDismiss","tokenName","useState","val","setVal","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","text","TokenInput","onSelectMax","onChange","symbol","ModalActions","Button","color","variant","onClick","WithdrawModal","useStakeToBomb","bombFinance","useBombFinance","handleTransactionReceipt","useHandleTransactionReceipt","onStake","amount","stakeToBomb","useWithdrawFromBomb","onWithdraw","withdrawFromBomb","useXbombBalance","slowRefresh","useRefresh","BigNumber","from","balance","setBalance","useEffect","a","getXbombExchange","rate","console","error","fetchBalance","StyledCardHeader","styled","div","StyledCardActions","StyledActionSpacer","props","theme","spacing","StyledCardContentInner","Stake","bombStats","useBombStats","useApprove","BOMB","contracts","xBOMB","address","approveStatus","approve","tokenBalance","useTokenBalance","stakedBalance","XBOMB","xbombBalance","xbombRate","Number","xbombToBombEquivalent","getDisplayBalance","bombPriceInDollars","priceInDollars","toFixed","stakedTokenPriceInDollars","tokenPriceInDollars","toString","useModal","onDismissDeposit","onPresentDeposit","onDismissWithdraw","onPresentWithdraw","Box","Card","CardContent","CardIcon","TokenSymbol","className","watchAssetInMetamask","style","position","top","right","border","paddingBottom","marginBottom","alt","width","filter","src","MetamaskFox","Value","Label","ApprovalState","APPROVED","disabled","NOT_APPROVED","marginTop","IconButton","useXbombAPR","bombAPR","setBombAPR","isUnlocked","getXbombAPR","useStakedBombBalance","getTotalStakedBomb","useFetchBombAPR","apr","setApr","getBombStakeAPR","fetchBoardroomAPR","BackgroundImage","createGlobalStyle","HomeImage","useStyles","makeStyles","gridItem","height","breakpoints","up","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","Staking","classes","account","useWallet","xbombAPR","xbombPrintApr","xbombPrintAprNice","stakedTotalBombBalance","useStakedTotalBombBalance","bombTotalStaked","xbombTVL","TVL","xbombYearlyAPR","yearlyAPR","Page","Helmet","Typography","align","gutterBottom","Grid","container","justify","mt","Alert","severity","item","xs","md","lg","textTransform","roundAndFormatNumber","UnlockWallet","addTransaction","useTransactionAdder","addPopup","useAddPopup","promise","summary","then","tx","catch","err","message","includes","toLowerCase","slice","stack","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","PENDING","UNKNOWN","response","approval","tokenAddress","StyledCardIcon","children","left","transform","AccountButton","module","exports","StyledValue","StyledIcon","Icon","AddIcon","themeColor","useContext","ThemeContext","viewBox","d","fill","grey","RemoveIcon","StyledButton","button","undefined","StyledLink","Link","to","React","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","name","createSvgIcon","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$variant","Paper","square","elevation","concat","capitalize","size","title","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft"],"mappings":"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","file":"static/js/17.c31614f5.chunk.js","sourcesContent":["import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({max, onConfirm, onDismiss, tokenName = ''}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, tokenName === 'USDC' ? 6 : 18);\r\n  }, [max, tokenName]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Deposit ${tokenName}`} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = ''}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max);\r\n  }, [max]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Unstake ${tokenName} and Receive BOMB`}  />\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useStakeToBomb = () => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      handleTransactionReceipt(bombFinance.stakeToBomb(amount), `Stake ${amount} BOMB for xBOMB`);\r\n    },\r\n    [bombFinance, handleTransactionReceipt],\r\n  );\r\n  return {onStake: handleStake};\r\n};\r\n\r\nexport default useStakeToBomb;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useWithdrawFromBomb = () => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      handleTransactionReceipt(bombFinance.withdrawFromBomb(amount), `Redeem ${amount} BOMB from xBOMB Staking`);\r\n    },\r\n    [bombFinance, handleTransactionReceipt],\r\n  );\r\n  return {onWithdraw: handleWithdraw};\r\n};\r\n\r\nexport default useWithdrawFromBomb;\r\n","import {useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\nimport useBombFinance from './useBombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useXbombBalance = () => {\r\n  const {slowRefresh} = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        const rate = await bombFinance.getXbombExchange();\r\n        setBalance(rate);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n    fetchBalance();\r\n  }, [setBalance, slowRefresh, bombFinance]);\r\n  return balance;\r\n};\r\n\r\nexport default useXbombBalance;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Box, Button, Card, CardContent } from '@material-ui/core';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\n// import CardContent from '../../../components/CardContent';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\r\nimport IconButton from '../../../components/IconButton';\r\nimport Label from '../../../components/Label';\r\nimport Value from '../../../components/Value';\r\n//import useXbombBalance from '../../../hooks/useXbombBalance';\r\nimport useBombStats from '../../../hooks/useBombStats';\r\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport MetamaskFox from '../../../assets/img/metamask-fox.svg';\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\n//import useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';   //May not be needed anymore.\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useStakeToBomb from '../../../hooks/useStakeToBomb';\r\nimport useWithdrawFromBomb from '../../../hooks/useWithdrawFromBomb';\r\nimport useXbombBalance from '../../../hooks/useXbombBalance';\r\n\r\nconst Stake: React.FC = () => {\r\n  const bombFinance = useBombFinance();\r\n  const bombStats = useBombStats();\r\n\r\n  const [approveStatus, approve] = useApprove(bombFinance.BOMB, bombFinance.contracts.xBOMB.address);\r\n\r\n\r\n\r\n  const tokenBalance = useTokenBalance(bombFinance.BOMB);\r\n  //const stakedBalance = useStakedBomb();\r\n  const stakedBalance = useTokenBalance(bombFinance.XBOMB);\r\n\r\n  const xbombBalance = useXbombBalance();\r\n  const xbombRate = Number(xbombBalance) / 1000000000000000000;\r\n  const xbombToBombEquivalent = Number(getDisplayBalance(stakedBalance)) * xbombRate;\r\n\r\n  const bombPriceInDollars = useMemo(\r\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\r\n    [bombStats],\r\n  );\r\n\r\n  const stakedTokenPriceInDollars = Number(bombPriceInDollars) * xbombRate;\r\n\r\n  const tokenPriceInDollars = useMemo(\r\n    () => {\r\n      return stakedTokenPriceInDollars\r\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\r\n        : null;\r\n    },\r\n    [stakedTokenPriceInDollars, stakedBalance],\r\n  );\r\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\r\n\r\n  const { onStake } = useStakeToBomb();\r\n  const { onWithdraw } = useWithdrawFromBomb();\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={(value) => {\r\n        onStake(value);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={'BOMB'}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={(value) => {\r\n        onWithdraw(value);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={'xBOMB'}\r\n    />,\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Card>\r\n        <CardContent>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <CardIcon>\r\n                <TokenSymbol symbol=\"XBOMB\" />\r\n              </CardIcon>\r\n\r\n              <Button\r\n                className={'shinyButton'}\r\n                onClick={() => {\r\n                  bombFinance.watchAssetInMetamask('XBOMB');\r\n                }}\r\n                style={{\r\n                  position: 'static',\r\n                  top: '10px',\r\n                  right: '10px',\r\n                  border: '1px grey solid',\r\n                  paddingBottom: '5px',\r\n                  marginBottom: '20px',\r\n                }}\r\n              >\r\n                {' '}\r\n                <b>+</b>&nbsp;&nbsp;\r\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\r\n              </Button>\r\n              <Value value={getDisplayBalance(stakedBalance)} />\r\n              <Label text={'xBOMB Balance'} variant=\"yellow\" />\r\n              <Label text={`≈ ${xbombToBombEquivalent.toFixed(2)} BOMB / $${tokenPriceInDollars}`} variant=\"yellow\" />\r\n            </StyledCardHeader>\r\n            <StyledCardActions>\r\n              {approveStatus !== ApprovalState.APPROVED ? (\r\n                <Button\r\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\r\n                  className={approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled'}\r\n                  style={{ marginTop: '20px' }}\r\n                  onClick={approve}\r\n                >\r\n                  Approve BOMB\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <IconButton onClick={onPresentWithdraw}>\r\n                    <RemoveIcon color={'yellow'} />\r\n                  </IconButton>\r\n                  <StyledActionSpacer />\r\n                  <IconButton onClick={onPresentDeposit}>\r\n                    <AddIcon color={'yellow'} />\r\n                  </IconButton>\r\n                </>\r\n              )}\r\n            </StyledCardActions>\r\n          </StyledCardContentInner>\r\n        </CardContent>\r\n      </Card>\r\n      {/* <Box mt={2} style={{color: '#FFF'}}>\r\n        {canWithdrawFromBoardroom ? (\r\n          ''\r\n        ) : (\r\n          <Card>\r\n            <CardContent>\r\n              <Typography style={{textAlign: 'center'}}>Withdraw possible in</Typography>\r\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </Box> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Stake;\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {PoolStats} from '../bomb-finance/types';\r\n\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useXbombAPR = () => {\r\n  const {slowRefresh} = useRefresh();\r\n  const [bombAPR, setBombAPR] = useState<PoolStats>();\r\n\r\n  const bombFinance = useBombFinance();\r\n  const isUnlocked = bombFinance?.isUnlocked;\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBombAPR(await bombFinance.getXbombAPR());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [slowRefresh, isUnlocked, bombFinance]);\r\n  return bombAPR;\r\n};\r\n\r\nexport default useXbombAPR;\r\n","import {useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\nimport useBombFinance from './useBombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useStakedBombBalance = () => {\r\n  const {slowRefresh} = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await bombFinance.getTotalStakedBomb());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    fetchBalance();\r\n  }, [slowRefresh, bombFinance]);\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBombBalance;\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useFetchBombAPR = () => {\r\n  const [apr, setApr] = useState<number>(0);\r\n  const bombFinance = useBombFinance();\r\n  const {slowRefresh} = useRefresh();\r\n\r\n  useEffect(() => {\r\n    async function fetchBoardroomAPR() {\r\n      try {\r\n        setApr(await bombFinance.getBombStakeAPR());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBoardroomAPR();\r\n  }, [setApr, bombFinance, slowRefresh]);\r\n\r\n  return apr;\r\n};\r\n\r\nexport default useFetchBombAPR;\r\n","import React, { useMemo } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport styled from 'styled-components';\r\nimport Stake from './components/Stake';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Box, Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport { roundAndFormatNumber } from '../../0x';\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\n\r\nimport useXbombBalance from '../../hooks/useXbombBalance';\r\nimport useXbombAPR from '../../hooks/useXbombAPR';\r\nimport useStakedTotalBombBalance from '../../hooks/useTotalStakedBombBalance';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport HomeImage from '../../assets/img/background.jpg';\r\nimport useFetchBombAPR from '../../hooks/useFetchBombAPR';\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${HomeImage}) repeat !important;\r\n    background-size: cover !important;\r\n    background-color: #171923;\r\n  }\r\n`;\r\nconst TITLE = 'bomb.money | xBOMB - BOMB Staking'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Staking = () => {\r\n  const classes = useStyles();\r\n  const { account } = useWallet();\r\n  // const { onRedeem } = useRedeemOnBoardroom();\r\n  //  const stakedBombBalance = useStakedBombBalance();\r\n  const xbombBalance = useXbombBalance();\r\n  const xbombRate = Number(xbombBalance / 1000000000000000000).toFixed(4);\r\n  const xbombAPR = useXbombAPR();\r\n  // console.log(\"xbombAPR\", xbombAPR)\r\n  //const xbombTVL = xbombAPR.TVL;\r\n  const xbombPrintApr = useFetchBombAPR();\r\n  // console.log(\"xbombPrintApr\", xbombPrintApr)\r\n\r\n  const xbombPrintAprNice = useMemo(() => (xbombPrintApr ? Number(xbombPrintApr).toFixed(2) : null), [xbombPrintApr]);\r\n\r\n\r\n  const stakedTotalBombBalance = useStakedTotalBombBalance();\r\n  const bombTotalStaked = Number(stakedTotalBombBalance / 1000000000000000000).toFixed(0);\r\n  const xbombTVL = useMemo(() => (xbombAPR ? Number(xbombAPR.TVL).toFixed(0) : null), [xbombAPR]);\r\n  // const xbombDailyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.dailyAPR).toFixed(2) : null), [xbombAPR]);\r\n  const xbombYearlyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.yearlyAPR).toFixed(2) : null), [xbombAPR]);\r\n\r\n  // console.log('xbombAPR', xbombYearlyAPR);\r\n\r\n  // const cashStat = useCashPriceInEstimatedTWAP();\r\n\r\n  return (\r\n    <Page>\r\n      <BackgroundImage />\r\n      <Helmet>\r\n        <title>{TITLE}</title>\r\n      </Helmet>\r\n      {!!account ? (\r\n        <>\r\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\r\n            BOMB Staking for xBOMB\r\n          </Typography>\r\n          <Grid container justify=\"center\">\r\n            <Box mt={3} style={{ width: '600px' }}>\r\n              <Alert variant=\"filled\" severity=\"info\">\r\n                <b> Most rewards are generated from boardroom printing!</b><br />\r\n                20% of all BOMB minted - from protocol allocation, does not impact BSHARE boardroom printing.<br />\r\n                If TWAP of BOMB peg is not over 1.01, yield will be reduced.<br /><br />\r\n                The APR (Minted BOMB) shown is based on our latest print, and is only applied when the Boardroom is printing (over 1.01 peg at epoch start)<br />\r\n                <br />We are currently in debt phase, APR will be approximately 3x higher once debt is repaid.\r\n              </Alert>\r\n\r\n            </Box>\r\n          </Grid>\r\n\r\n\r\n\r\n          <Box mt={5}>\r\n            <Grid container justify=\"center\" spacing={3}>\r\n\r\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>1 xBOMB =</Typography>\r\n                    <Typography>{Number(xbombRate)} BOMB</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              {/* <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>\r\n                      BOMB PEG <small>(TWAP)</small>\r\n                    </Typography>\r\n                    <Typography>{scalingFactor} BTC</Typography>\r\n                    <Typography>\r\n                      <small>per 10,000 BOMB</small>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid> */}\r\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Historic APR</Typography>\r\n                    <Typography>{xbombYearlyAPR}%</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>APR (Minted BOMB)</Typography>\r\n                    <Typography>{xbombPrintAprNice}%</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} md={2} lg={2}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>BOMB Staked</Typography>\r\n                    <Typography>{roundAndFormatNumber(bombTotalStaked)}</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n                <Card className={classes.gridItem}>\r\n                  <CardContent align=\"center\">\r\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>xBOMB TVL</Typography>\r\n                    <Typography>${roundAndFormatNumber(xbombTVL, 2)}</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Box mt={4}>\r\n              <StyledBoardroom>\r\n                <StyledCardsWrapper>\r\n                  {/* <StyledCardWrapper>\r\n                    <Harvest />\r\n                  </StyledCardWrapper> */}\r\n                  {/* <Spacer /> */}\r\n\r\n                  <StyledCardWrapper>\r\n\r\n                    <Stake />\r\n                  </StyledCardWrapper>\r\n                </StyledCardsWrapper>\r\n              </StyledBoardroom>\r\n            </Box>\r\n            <Box mt={4}>\r\n              <StyledBoardroom>\r\n                <StyledCardsWrapper>\r\n                  {/* <StyledCardWrapper>\r\n                    <Harvest />\r\n                  </StyledCardWrapper> */}\r\n                  {/* <Spacer /> */}\r\n                  <StyledCardWrapper>\r\n                    <Box>\r\n                      <Card>\r\n                        <CardContent>\r\n                          <h2>About xBOMB & Rewards</h2>\r\n                          {/* <p><strong>We are currently depositing 10,000 BOMB per week into the staking pool until our BTC Single Staking service is launched.</strong></p> */}\r\n                          <p>xBOMB will be the governance token required to cast votes on protocol decisions.</p>\r\n                          <p>20% of all BOMB minted will be deposited into the xBOMB smart contract, increasing the amount of BOMB that can be redeemed for each xBOMB. Rewards will be deposited at random times to prevent abuse.</p>\r\n                          <p>Functionality will be developed around xBOMB including using it as collateral to borrow other assets.</p>\r\n                          <p>Reward structure subject to change based on community voting.</p>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Box>\r\n                  </StyledCardWrapper>\r\n                </StyledCardsWrapper>\r\n              </StyledBoardroom>\r\n            </Box>\r\n            {/* <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item xs={4}>\r\n              <Card>\r\n                <CardContent align=\"center\">\r\n                  <Typography>Rewards</Typography>\r\n\r\n                </CardContent>\r\n                <CardActions style={{justifyContent: 'center'}}>\r\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\r\n                </CardActions>\r\n                <CardContent align=\"center\">\r\n                  <Typography>Claim Countdown</Typography>\r\n                  <Typography>00:00:00</Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Card>\r\n                <CardContent align=\"center\">\r\n                  <Typography>Stakings</Typography>\r\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\r\n                </CardContent>\r\n                <CardActions style={{justifyContent: 'center'}}>\r\n                  <Button>+</Button>\r\n                  <Button>-</Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          </Grid> */}\r\n          </Box>\r\n          {/* \r\n          <Box mt={5}>\r\n            <Grid container justify=\"center\" spacing={3} mt={10}>\r\n              <Button\r\n                disabled={stakedBombBalance.eq(0) || (!canWithdraw && !canClaimReward)}\r\n                onClick={onRedeem}\r\n                className={\r\n                  stakedBombBalance.eq(0) || (!canWithdraw && !canClaimReward)\r\n                    ? 'shinyButtonDisabledSecondary'\r\n                    : 'shinyButtonSecondary'\r\n                }\r\n              >\r\n                Claim &amp; Withdraw\r\n              </Button>\r\n            </Grid>\r\n          </Box> */}\r\n        </>\r\n      ) : (\r\n        <UnlockWallet />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport default Staking;\r\n","import {useCallback} from 'react';\r\nimport {TransactionResponse} from '@ethersproject/providers';\r\nimport {useTransactionAdder} from '../state/transactions/hooks';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\r\n  const addTransaction = useTransactionAdder();\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<TransactionResponse>, summary: string) => {\r\n      promise\r\n        .then((tx) => addTransaction(tx, {summary}))\r\n        .catch((err) => {\r\n          if (err.message.includes('User denied')) {\r\n            // User denied transaction signature on MetaMask.\r\n            return;\r\n          }\r\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\r\n          console.error(`${message}: ${err.message || err.stack}`);\r\n          addPopup({error: {message, stack: err.message || err.stack}});\r\n        });\r\n    },\r\n    [addPopup, addTransaction],\r\n  );\r\n}\r\n\r\nexport default useHandleTransactionReceipt;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CardIconProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: #363746;\r\n  font-size: 36px;\r\n  height: 95px;\r\n  width: 95px;\r\n  border-radius: 95px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nexport default CardIcon;\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","module.exports = __webpack_public_path__ + \"static/media/background.3761c6a5.jpg\";","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({value}) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface IconProps {\r\n  color?: string;\r\n  children?: string;\r\n}\r\n\r\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\r\n\r\nconst StyledIcon = styled.div``;\r\n\r\nexport default Icon;\r\n","import React, {useContext} from 'react';\r\nimport {ThemeContext} from 'styled-components';\r\n\r\nimport Icon, {IconProps} from '../Icon';\r\n\r\nconst AddIcon: React.FC<IconProps> = ({color}) => {\r\n  const {color: themeColor} = useContext(ThemeContext);\r\n  return (\r\n    <Icon>\r\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\r\n      </svg>\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default AddIcon;\r\n","import React, {useContext} from 'react';\r\nimport {ThemeContext} from 'styled-components';\r\n\r\nimport Icon, {IconProps} from '../Icon';\r\n\r\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\r\n  const {color: themeColor} = useContext(ThemeContext);\r\n  return (\r\n    <Icon>\r\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M19 13H5v-2h14v2z\" />\r\n      </svg>\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default RemoveIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface IconButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\r\n  return (\r\n    <StyledButton disabled={disabled} onClick={onClick}>\r\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  disabled?: boolean;\r\n}\r\n/*\r\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\r\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\r\n */\r\n\r\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\r\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  border: 2px solid;\r\n  border-radius: 28px;\r\n  background-color: #171923;\r\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\r\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 700;\r\n  height: 56px;\r\n  justify-content: center;\r\n  letter-spacing: 1px;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  text-transform: uppercase;\r\n  width: 56px;\r\n\r\n  &:hover {\r\n    background-color: #f9d749;\r\n    color: #171923;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default IconButton;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the alert.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Override the default label for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  closeText: PropTypes.string,\n\n  /**\r\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\r\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * Override the icon displayed before the children.\r\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The component maps the `severity` prop to a range of different icons,\r\n   * for instance success to `<SuccessOutlined>`.\r\n   * If you wish to change this mapping, you can provide your own.\r\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\r\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * The ARIA role attribute of the element.\r\n   */\n  role: PropTypes.string,\n\n  /**\r\n   * The severity of the alert. This defines the color and icon used.\r\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);"],"sourceRoot":""}