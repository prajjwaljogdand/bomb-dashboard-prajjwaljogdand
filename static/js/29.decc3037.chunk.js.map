{"version":3,"sources":["../../src/index.ts"],"names":["URI_AVAILABLE","UserRejectedRequestError","_this","name","constructor","message","_inheritsLoose","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","Number","k","undefined","WalletConnectConnector","config","_this2","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","_proto","chainId","emitUpdate","accounts","account","walletConnectProvider","removeListener","emitDeactivate","activate","Promise","resolve","reject","userReject","_this4","connector","on","enable","then","error","err","provider","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","getAccount","deactivate","disconnect","close","AbstractConnector","update","ConnectorEvent","Update","emitError","Deactivate","EventEmitter"],"mappings":"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","file":"static/js/29.decc3037.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}