{"version":3,"sources":["../../src/index.ts"],"names":["WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","_this","handleChainChanged","bind","handleAccountsChanged","_inheritsLoose","_proto","activate","_this3","provider","request","method","accounts","account","on","window","ethereum","isCoinbaseWallet","walletLink","then","m","WalletLink","makeWeb3Provider","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","emitUpdate","AbstractConnector","update","emit","ConnectorEvent","Update","emitError","error","Error","Deactivate","EventEmitter"],"mappings":"smBAGA,IAUaA,EAAb,Y,QASE,c,MAAcC,QAAKC,YAASC,eAAYC,aAAUC,sB,OAChDC,cAAM,CAAED,kBAAmBA,KAA3B,MAEKJ,IAAMA,EACXK,EAAKJ,QAAUA,EACfI,EAAKH,WAAaA,EAClBG,EAAKF,SAAWA,IAAY,EAE5BE,EAAKC,mBAAqBD,EAAKC,mBAAmBC,KAAxB,MAC1BF,EAAKG,sBAAwBH,EAAKG,sBAAsBD,KAA3B,M,IAlBjCE,G,EAAAA,G,sEAAE,IAAF,cAAE,OAAAC,EAqBaC,SArBf,e,MAyBM,K,oCAWqBC,EAAKC,SAASC,QAAQ,CAC3CC,OAAQ,yBADa,eAAjBC,GAGN,IAAMC,EAAUD,EAAS,GAKzB,OAHAJ,EAAKC,SAASK,GAAG,eAAgBN,EAAKN,oBACtCM,EAAKC,SAASK,GAAG,kBAAmBN,EAAKJ,uBAElC,CAAEK,SAAUD,EAAKC,SAAUI,QAASA,O,gBArBvCE,OAAOC,WAAiD,IAArCD,OAAOC,SAASC,iBAErCT,EAAKC,SAAWM,OAAOC,a,sBACbR,EAAKU,W,uBACU,mCAAqBC,MAAK,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,EAAkBA,MAA7C,eAAnBC,GACNb,EAAKU,WAAa,IAAIG,EAAJ,GAChBxB,QAASW,EAAKX,QACdE,SAAUS,EAAKT,UACXS,EAAKV,WAAa,CAAEA,WAAYU,EAAKV,YAAe,KAE1DU,EAAKC,SAAWD,EAAKU,WAAWI,iBAAiBd,EAAKZ,IA3C3C,M,kGAUjB,oCAAEU,EA+CaiB,YA/Cf,eAgDI,uBAAO,KAAKd,UAhDhB,oCAAEH,EAmDakB,WAnDf,eAoDI,uBAAO,KAAKf,SAASgB,SApDzB,oCAAEnB,EAuDaoB,WAvDf,e,uBAwD2B,KAAKjB,SAASC,QAAQ,CAC3CC,OAAQ,yBADa,eAAjBC,GAGN,OAAOA,EAAS,MA3DpB,oCAAEN,EA8DOqB,WAAA,WACL,KAAKlB,SAASmB,eAAe,eAAgB,KAAK1B,oBAClD,KAAKO,SAASmB,eAAe,kBAAmB,KAAKxB,wBAhEvDE,EAmEauB,MAnEf,e,OAoEI,KAAKpB,SAASoB,QAAd,KACKC,iB,kBArET,oCAAExB,EAwEQJ,mBAAA,SAAmBuB,GAIzB,KAAKM,WAAW,CAAEN,QAASA,KA5E7BnB,EA+EQF,sBAAA,SAAsBQ,GAI5B,KAAKmB,WAAW,CAAElB,QAASD,EAAS,MAnFxC,GAAyCoB,M,2FAVnBA,EAAtB,Y,4BAGgBhC,Q,MAAkD,MAAlDA,kB,6BAEPA,kBAAoBA,E,oHASjB+B,oBAAWE,G,KAIdC,KAAKC,IAAeC,OAAQH,I,EAGzBI,mBAAUC,G,KAIbJ,KAAKC,IAAeI,MAAOD,I,EAGxBR,0B,KAIHI,KAAKC,IAAeK,a,EAhC7B,CAAgDC","file":"static/js/30.4a937804.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}