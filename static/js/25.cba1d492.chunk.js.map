{"version":3,"sources":["../../src/index.ts"],"names":["chainIdToNetwork","FortmaticConnector","apiKey","chainId","Object","keys","includes","toString","_this","supportedChainIds","_inheritsLoose","_proto","activate","_this3","fortmatic","getProvider","enable","then","accounts","account","provider","m","Fortmatic","undefined","getChainId","getAccount","send","deactivate","close","_this11","user","logout","emitDeactivate","AbstractConnector","emitUpdate","update","emit","ConnectorEvent","Update","emitError","error","Error","Deactivate","EventEmitter"],"mappings":"uMAIA,IAAMA,EAAkD,CACtD,EAAG,UACH,EAAG,UACD,EAAC,UACD,GAAE,SAQOC,EAAb,Y,QAME,c,MAAcC,WAAQC,Y,OACVC,OAAOC,KAAKL,GAAkBM,SAASH,EAAQI,aAAzD,aAAS,IACTC,cAAM,CAAEC,kBAAmB,CAACN,MAA5B,MAEKD,OAASA,EACdM,EAAKL,QAAUA,E,IAXnBO,G,EAAAA,G,6EAAA,yBAAAC,EAceC,SAdf,e,wCAuB0BC,EAAKC,UACxBC,cACAC,SACAC,MAAK,SAACC,GAAD,OAAgCA,EAAS,OAH3B,eAAhBC,GAKN,MAAO,CAAEC,SAAUP,EAAKC,UAAUC,cAAeZ,QAASU,EAAKV,QAASgB,e,EAbnE,K,iBAAAN,EAAKC,U,uBACgB,oCAAoBG,MAAK,YAAC,4BAAII,OAAJ,EAAIA,EAAC,SAAL,EAAkBA,MAA5C,eAAlBC,GACNT,EAAKC,UAAY,IAAIQ,EACnBT,EAAKX,OACY,IAAjBW,EAAKV,SAAkC,IAAjBU,EAAKV,aAAgBoB,EAAYvB,EAAiBa,EAAKV,a,mDAnBrF,oCAAAQ,EA+BeI,YA/Bf,eAgCI,uBAAO,KAAKD,UAAUC,eAhC1B,oCAAAJ,EAmCea,WAnCf,eAoCI,uBAAO,KAAKrB,SApChB,oCAAAQ,EAuCec,WAvCf,eAwCI,uBAAO,KAAKX,UACTC,cACAW,KAAK,gBACLT,MAAK,SAACC,GAAD,OAAgCA,EAAS,OA3CrD,oCAAAP,EA8CSgB,WAAA,aA9CThB,EAgDeiB,MAhDf,e,MAiDU,K,uBAAAC,EAAKf,UAAUgB,KAAKC,UAApB,iBACNF,EAAKG,oBAlDT,uCAAwCC,M,2FAblBA,EAAtB,Y,4BAGgBxB,Q,MAAkD,MAAlDA,kB,6BAEPA,kBAAoBA,E,oHASjByB,oBAAWC,G,KAIdC,KAAKC,IAAeC,OAAQH,I,EAGzBI,mBAAUC,G,KAIbJ,KAAKC,IAAeI,MAAOD,I,EAGxBR,0B,KAIHI,KAAKC,IAAeK,a,EAhC7B,CAAgDC","file":"static/js/25.cba1d492.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}