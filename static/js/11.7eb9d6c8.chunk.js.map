{"version":3,"sources":["../node_modules/@material-ui/icons/FlashOn.js","hooks/useEarnings.ts","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useStatsForPool.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/Farm/FarmCard.js","hooks/useBanks.ts","views/Farm/Farm.js","hooks/useHandleTransactionReceipt.ts","hooks/useApprove.ts","components/CardIcon/CardIcon.tsx","components/UnlockWallet/UnlockWallet.tsx","assets/img/background.jpg","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","components/Spacer/Spacer.tsx","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useStakedTokenPriceInDollars.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","components/PageHeader/PageHeader.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useEarnings","poolName","earnTokenName","poolId","useState","BigNumber","from","balance","setBalance","bombFinance","useBombFinance","isUnlocked","fetchBalance","useCallback","a","earnedFromBank","myAccount","useEffect","catch","err","console","error","stack","refreshBalance","setInterval","config","refreshInterval","clearInterval","useHarvest","bank","handleTransactionReceipt","useHandleTransactionReceipt","onReward","harvest","contract","StyledCardHeader","styled","div","StyledCardActions","props","theme","spacing","StyledCardContentInner","Harvest","earnings","bombStats","useBombStats","tShareStats","useShareStats","tokenName","tokenStats","tokenPriceInDollars","useMemo","Number","priceInDollars","toFixed","earnedInDollars","getDisplayBalance","Card","CardContent","CardIcon","TokenSymbol","symbol","earnToken","Value","Typography","style","textTransform","color","Button","onClick","disabled","eq","className","useStake","onStake","amount","amountBn","parseUnits","depositToken","decimal","stake","depositTokenName","useStakedBalance","stakedBalanceOnBank","useWithdraw","onWithdraw","unstake","DepositModal","max","decimals","onConfirm","onDismiss","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","text","TokenInput","onSelectMax","onChange","ModalActions","WithdrawModal","StyledActionSpacer","Stake","useApprove","address","approveStatus","approve","themeColor","useContext","ThemeContext","tokenBalance","useTokenBalance","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","onZap","useZap","useModal","isNaN","onDismissDeposit","onPresentDeposit","ZapModal","zappingToken","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","size","ApprovalState","APPROVED","closedForStaking","PENDING","UNKNOWN","marginTop","IconButton","grey","useBank","contractName","BanksContext","banks","find","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","useRedeem","onRedeem","exit","useStyles","makeStyles","gridItem","height","breakpoints","up","LPTokenHelpText","pairName","uniswapUrl","bombAddr","BOMB","bshareAddr","BSHARE","includes","StyledLink","href","target","BankNotFound","Center","PageHeader","icon","title","subtitle","StyledBank","primary","main","StyledCardsWrapper","StyledCardWrapper","Bank","window","scrollTo","vaultUrl","classes","bankId","useParams","account","useWallet","statsOnPool","name","Box","mt","Grid","container","justify","marginBottom","Alert","variant","severity","item","xs","md","lg","textAlign","yearlyAPR","dailyAPR","TVL","Spacer","UnlockWallet","CardActions","ref","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","alignItems","padding","marginLeft","FarmCard","position","right","top","width","borderRadius","backgroundColor","justifyContent","component","toUpperCase","Link","to","useBanks","BackgroundImage","createGlobalStyle","HomeImage","Farm","path","useRouteMatch","activeBanks","filter","finished","Page","exact","Helmet","Container","maxWidth","hidden","sectionInUI","length","align","gutterBottom","map","Fragment","key","addTransaction","useTransactionAdder","addPopup","useAddPopup","promise","summary","then","tx","message","toLowerCase","slice","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","response","approval","tokenAddress","StyledCardIcon","children","left","transform","AccountButton","module","StyledValue","StyledIcon","Icon","AddIcon","viewBox","fill","RemoveIcon","StyledButton","button","undefined","StyledSpacer","s","useLpStats","lpTicker","stat","setStat","slowRefresh","useRefresh","getLPStat","fetchLpPrice","zapIn","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars","useApproveZapper","BNB_TICKER","BNB","BOMB_TICKER","BSHARE_TICKER","BTC_TICKER","externalTokens","ZAPPER_ROUTER_ADDR","StyledDescriptionText","StyledMenuItem","selected","MenuItem","ftmBalance","toString","bombBalance","bshareBalance","btcBalance","BTC","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","n","parseFloat","isFinite","estimateZapIn","String","estimateZap","InputLabel","id","Select","event","labelId","Label","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3"],"mappings":"wHAEA,IAAIA,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,MAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,6BACD,WAEJN,EAAQE,QAAUE,G,kVCSHG,EAtBK,SAACC,EAAwBC,EAAuBC,GAClE,MAA8BC,mBAASC,IAAUC,KAAK,IAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,cACdC,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAaE,WAE1BC,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,sEACTL,EAAYM,eAAed,EAAUC,EAAeC,EAAQM,EAAYO,WAD/D,OACzBT,EADyB,OAE/BC,EAAWD,GAFoB,2CAG9B,CAACN,EAAUC,EAAeC,EAAQM,IAWrC,OATAQ,qBAAU,WACR,GAAIN,EAAY,CACdC,IAAeM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAIG,UAEhD,IAAMC,EAAiBC,YAAYZ,EAAca,IAAOC,iBACxD,OAAO,kBAAMC,cAAcJ,OAE5B,CAACZ,EAAYV,EAAUQ,EAAaG,IAEhCL,G,SCNMqB,EAdI,SAACC,GAClB,IAAMpB,EAAcC,cACdoB,EAA2BC,cASjC,MAAO,CAACC,SAPanB,uBAAY,WAC/BiB,EACErB,EAAYwB,QAAQJ,EAAKK,SAAUL,EAAK1B,QADlB,gBAEb0B,EAAK3B,cAFQ,iBAEc2B,EAAKK,aAE1C,CAACL,EAAMpB,EAAaqB,M,mCCsDnBK,EAAmBC,IAAOC,IAAV,iGAKhBC,EAAoBF,IAAOC,IAAV,gHAGP,SAACE,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAIzCC,EAAyBN,IAAOC,IAAV,gJAQbM,EAlEyB,SAAC,GAAY,IAAXd,EAAU,EAAVA,KAClCe,EAAW5C,EAAY6B,EAAKK,SAAUL,EAAK3B,cAAe2B,EAAK1B,QAC9D6B,EAAYJ,EAAWC,GAAvBG,SACDa,EAAYC,cACZC,EAAcC,cAEdC,EAAmC,WAAvBpB,EAAK3B,cAA6B,SAAW,OACzDgD,EAAoC,WAAvBrB,EAAK3B,cAA6B6C,EAAcF,EAC7DM,EAAsBC,mBAC1B,kBAAOF,EAAaG,OAAOH,EAAWI,gBAAgBC,QAAQ,GAAK,OACnE,CAACL,IAEGM,GAAmBH,OAAOF,GAAuBE,OAAOI,YAAkBb,KAAYW,QAAQ,GACpG,OACE,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjB,EAAD,KACE,kBAACP,EAAD,KACE,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,OAAQjC,EAAKkC,UAAUD,UAEtC,kBAACE,EAAA,EAAD,CAAOtE,MAAO+D,YAAkBb,KAClB,kBAACqB,EAAA,EAAD,CAAYC,MAAO,CAACC,cAAe,YAAaC,MAAO,WAAvD,kBACGZ,IAGX,kBAACS,EAAA,EAAD,CAAYC,MAAO,CAACC,cAAe,YAAaC,MAAO,YAAvD,UACAnB,EADA,aAKR,kBAACX,EAAD,KACE,kBAAC+B,EAAA,EAAD,CACEC,QAAStC,EACTuC,SAAU3B,EAAS4B,GAAG,GACtBC,UAAW7B,EAAS4B,GAAG,GAAK,sBAAwB,eAHtD,c,sEC/BGE,GAjBE,SAAC7C,GAChB,IAAMpB,EAAcC,cACdoB,EAA2BC,cAYjC,MAAO,CAAC4C,QAVY9D,uBAClB,SAAC+D,GACC,IAAMC,EAAWC,sBAAWF,EAAQ/C,EAAKkD,aAAaC,SACtDlD,EACErB,EAAYwE,MAAMpD,EAAKK,SAAUL,EAAK1B,OAAQ0E,GADxB,gBAEbD,EAFa,YAEH/C,EAAKqD,iBAFF,eAEyBrD,EAAKK,aAGxD,CAACL,EAAMpB,EAAaqB,M,UCWTqD,GAtBU,SAAClF,EAAwBE,GAChD,MAA8BC,mBAASC,IAAUC,KAAK,IAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,cACdC,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAaE,WAE1BC,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,sEACTL,EAAY2E,oBAAoBnF,EAAUE,EAAQM,EAAYO,WADrD,OACzBT,EADyB,OAE/BC,EAAWD,GAFoB,2CAG9B,CAACN,EAAUE,EAAQM,IAWtB,OATAQ,qBAAU,WACR,GAAIN,EAAY,CACdC,IAAeM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAIG,UAEhD,IAAMC,EAAiBC,YAAYZ,EAAca,IAAOC,iBACxD,OAAO,kBAAMC,cAAcJ,OAE5B,CAACZ,EAAYV,EAAUO,EAAYC,EAAaG,IAE5CL,G,oBCHM8E,GAjBK,SAACxD,GACnB,IAAMpB,EAAcC,cACdoB,EAA2BC,cAYjC,MAAO,CAACuD,WAVezE,uBACrB,SAAC+D,GACC,IAAMC,EAAWC,sBAAWF,EAAQ/C,EAAKkD,aAAaC,SACtDlD,EACErB,EAAY8E,QAAQ1D,EAAKK,SAAUL,EAAK1B,OAAQ0E,GAD1B,mBAEVD,EAFU,YAEA/C,EAAKqD,iBAFL,iBAE8BrD,EAAKK,aAG7D,CAACL,EAAMpB,EAAaqB,M,wCCuCT0D,GAtCmC,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,IAAKC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,UAA0C,KAA/BC,UAA+B,EAApB3C,kBAAoB,MAAR,GAAQ,EAC3G,EAAsB7C,mBAAS,IAA/B,mBAAOyF,EAAP,KAAYC,EAAZ,KAEMC,EAAc3C,mBAAQ,WAC1B,OAAO4C,YAAsBP,EAAKC,GAAU,KAC3C,CAACD,EAAKC,IAEHO,EAAepF,uBACnB,SAACqF,GACCJ,EAAOI,EAAEC,cAAczG,SAEzB,CAACoG,IAGGM,EAAkBvF,uBAAY,WAClCiF,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAI,kBAAatD,KAC7B,kBAACuD,GAAA,EAAD,CACE9G,MAAOmG,EACPY,YAAaL,EACbM,SAAUT,EACVR,IAAKM,EACLjC,OAAQb,IAEV,kBAAC0D,GAAA,EAAD,KAEE,kBAACtC,EAAA,EAAD,CAAQI,UAAU,uBAAuBH,QAAS,kBAAMqB,EAAUE,KAAlE,cCWOe,GAzCqC,SAAC,GAAgE,IAA/DjB,EAA8D,EAA9DA,UAAsBF,GAAwC,EAAnDG,UAAmD,EAAxCH,KAAwC,IAAnCxC,iBAAmC,MAAvB,GAAuB,MAAnByC,gBAAmB,MAAR,GAAQ,EAClH,EAAsBtF,mBAAS,IAA/B,mBAAOyF,EAAP,KAAYC,EAAZ,KAEMC,EAAc3C,mBAAQ,WAC1B,OAAO4C,YAAsBP,EAAKC,GAAU,KAC3C,CAACD,EAAKC,IAEHO,EAAepF,uBACnB,SAACqF,GACCJ,EAAOI,EAAEC,cAAczG,SAEzB,CAACoG,IAGGM,EAAkBvF,uBAAY,WAClCiF,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAI,mBAActD,KAC9B,kBAACuD,GAAA,EAAD,CACEC,YAAaL,EACbM,SAAUT,EACVvG,MAAOmG,EACPJ,IAAKM,EACLjC,OAAQb,IAEV,kBAAC0D,GAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAQI,UAAU,uBAAuBH,QAAS,kBAAMqB,EAAUE,KAAlE,c,UCqHF1D,GAAmBC,IAAOC,IAAV,iGAKhBC,GAAoBF,IAAOC,IAAV,+GAOjBwE,GAAqBzE,IAAOC,IAAV,+DACZ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAChC,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGpCC,GAAyBN,IAAOC,IAAV,gJAQbyE,GA1JqB,SAAC,GAAY,IAAXjF,EAAU,EAAVA,KACpC,EAAiCkF,aAAWlF,EAAKkD,aAAclD,EAAKmF,SAApE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEcC,EAAcC,qBAAWC,KAAhCjD,MACDkD,EAAeC,aAAgB1F,EAAKkD,cACpCyC,EAAgBrC,GAAiBtD,EAAKK,SAAUL,EAAK1B,QACrDsH,EAA4BC,aAA6B7F,EAAKqD,iBAAkBrD,EAAKkD,cACrF5B,EAAsBC,mBAC1B,kBAAOqE,GAAwD,OAC/D,CAACA,IAEGjE,GACJH,OAAOF,GAAuBE,OAAOI,YAAkB+D,EAAe3F,EAAKkD,aAAaC,WACxFzB,QAAQ,GACHoB,EAAWD,GAAS7C,GAApB8C,QACAgD,EAASC,aAAO/F,GAAhB8F,MACArC,EAAcD,GAAYxD,GAA1ByD,WAEP,EAA6CuC,aAC3C,kBAAC,GAAD,CACEpC,IAAK6B,EACL5B,SAAU7D,EAAKkD,aAAaC,QAC5BW,UAAW,SAACf,GACNvB,OAAOuB,IAAW,GAAKkD,MAAMzE,OAAOuB,MACxCD,EAAQC,GACRmD,MAEF9E,UAAWpB,EAAKqD,oBATpB,mBAAO8C,EAAP,KAAyBD,EAAzB,KAaA,EAAsCF,aACpC,kBAACI,GAAA,EAAD,CACEvC,SAAU7D,EAAKkD,aAAaC,QAC5BW,UAAW,SAACuC,EAAcjF,EAAW2B,GAC/BvB,OAAOuB,IAAW,GAAKkD,MAAMzE,OAAOuB,MACxC+C,EAAMO,EAAcjF,EAAW2B,GAC/BuD,MAEFlF,UAAWpB,EAAKqD,oBARpB,mBAAOkD,EAAP,KAAqBD,EAArB,KAYA,EAA+CN,aAC7C,kBAAC,GAAD,CACEpC,IAAK+B,EACL9B,SAAU7D,EAAKkD,aAAaC,QAC5BW,UAAW,SAACf,GACNvB,OAAOuB,IAAW,GAAKkD,MAAMzE,OAAOuB,MACxCU,EAAWV,GACXyD,MAEFpF,UAAWpB,EAAKqD,oBATpB,mBAAOoD,EAAP,KAA0BD,EAA1B,KAaA,OACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,OAAQjC,EAAKkD,aAAajB,OAAQyE,KAAM,MAEvD,kBAACvE,EAAA,EAAD,CAAOtE,MAAO+D,YAAkB+D,EAAe3F,EAAKkD,aAAaC,WAK5D,kBAACf,EAAA,EAAD,CAAYC,MAAO,CAACC,cAAe,YAAaC,MAAO,WAAvD,kBACYZ,IAEd,kBAACS,EAAA,EAAD,CAAYC,MAAO,CAACC,cAAe,YAAaC,MAAO,YAAvD,UACGvC,EAAKqD,iBADR,aAKL,kBAAC,GAAD,KACG+B,IAAkBuB,KAAcC,SAC/B,kBAACpE,EAAA,EAAD,CACEE,SACE1C,EAAK6G,kBACLzB,IAAkBuB,KAAcG,SAChC1B,IAAkBuB,KAAcI,QAElCtE,QAAS4C,EACTzC,UACE5C,EAAK6G,kBACLzB,IAAkBuB,KAAcG,SAChC1B,IAAkBuB,KAAcI,QAC5B,sBACA,cAEN1E,MAAO,CAAC2E,UAAW,SAdrB,kBAgBchH,EAAKqD,mBAGnB,oCACE,kBAAC4D,GAAA,EAAD,CAAYxE,QAASgE,GACnB,kBAAC,IAAD,OAEF,kBAACzB,GAAD,MACA,kBAACiC,GAAA,EAAD,CACEvE,SACE1C,EAAK6G,kBACqB,mBAA1B7G,EAAKqD,kBACqB,iBAA1BrD,EAAKqD,iBAEPZ,QAAS,kBAAOzC,EAAK6G,iBAAmB,KAAON,MAE/C,kBAAC,KAAD,CAAalE,MAAO,CAACE,MAAO+C,EAAW4B,KAAK,SAE9C,kBAAClC,GAAD,MACA,kBAACiC,GAAA,EAAD,CACEvE,SAAU1C,EAAK6G,iBACfpE,QAAS,kBAAOzC,EAAK6G,iBAAmB,KAAOV,MAE/C,kBAAC,IAAD,a,UCjJHgB,GALC,SAACC,GAEf,OADgB7B,qBAAW8B,MAApBC,MACMC,MAAK,SAACvH,GAAD,OAAUA,EAAKK,WAAa+G,MCkBjCI,GAlBS,SAACxH,GACvB,IAAMpB,EAAcC,cAEpB,EAAgCN,qBAAhC,mBAAOkJ,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB3I,sBAAW,sBAAC,sBAAAC,EAAA,kEACnCyI,EADmC,SACjB9I,EAAYgJ,YAAY5H,GADP,6EAElC,CAACpB,EAAaoB,IAQjB,OANAZ,qBAAU,WACRuI,IAAmBtI,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAR,oCAA2CF,EAAIG,WACjF,IAAMI,EAAkBF,YAAYgI,EAAkB/H,IAAOC,iBAC7D,OAAO,kBAAMC,cAAcD,MAC1B,CAAC6H,EAAa9I,EAAa+I,IAEvBF,GCLMI,GAXG,SAAC7H,GACjB,IAAMpB,EAAcC,cACdoB,EAA2BC,cAMjC,MAAO,CAAC4H,SAJa9I,uBAAY,WAC/BiB,EAAyBrB,EAAYmJ,KAAK/H,EAAKK,SAAUL,EAAK1B,QAAtC,iBAAyD0B,EAAKK,aACrF,CAACL,EAAMpB,EAAaqB,M,UCUnB+H,GAAYC,aAAW,SAACtH,GAAD,MAAY,CACvCuH,SAAS,aACPC,OAAQ,QACPxH,EAAMyH,YAAYC,GAAG,MAAQ,CAC5BF,OAAQ,aAuGRG,GAAgD,SAAC,GAAY,IAK7DC,EACAC,EANkDxI,EAAU,EAAVA,KAChDpB,EAAcC,cACd4J,EAAW7J,EAAY8J,KAAKvD,QAC5BwD,EAAa/J,EAAYgK,OAAOzD,QAqBtC,OAhBInF,EAAKqD,iBAAiBwF,SAAS,cACjCN,EAAW,iBACXC,EAAa,8EAAgFC,GAGtFzI,EAAKqD,iBAAiBwF,SAAS,gBACtCN,EAAW,mBACXC,EAAa,mCAAqCC,EAAW,IAAME,IAInEJ,EAAW,kBACXC,EAAa,uCAAyCG,GAKtD,kBAAC9G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACgH,GAAD,CAAYC,KAAMP,EAAYQ,OAAO,UAArC,gCAC4BT,EAD5B,2BAQFU,GAAe,WACnB,OACE,kBAACC,GAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,eAAKC,MAAM,YAAYC,SAAS,iDAKjDC,GAAahJ,IAAOC,IAAV,uJASVsI,GAAavI,IAAOtB,EAAV,0FAGL,SAACyB,GAAD,OAAWA,EAAMC,MAAM4B,MAAMiH,QAAQC,QAG1CC,GAAqBnJ,IAAOC,IAAV,8KAUlBmJ,GAAoBpJ,IAAOC,IAAV,0IASjB0I,GAAS3I,IAAOC,IAAV,8GAOGoJ,GAtLQ,WACrBxK,qBAAU,kBAAMyK,OAAOC,SAAS,EAAG,MACnC,IAQIC,EAREC,EAAUhC,KACTiC,EAAUC,cAAVD,OACDjK,EAAOmH,GAAQ8C,GAEdE,EAAWC,cAAXD,QACArC,EAAYD,GAAU7H,GAAtB8H,SACDuC,EAAc7C,GAAgBxH,GAepC,OAXE+J,EADE/J,EAAKqD,iBAAiBwF,SAAS,aACtB,mDAGH7I,EAAKqD,iBAAiBwF,SAAS,eAC5B,+BAGA,qDAINsB,GAAWnK,EAChB,oCACE,kBAACmJ,EAAA,EAAD,CACEC,KAAK,eAELC,MAAK,OAAErJ,QAAF,IAAEA,OAAF,EAAEA,EAAMsK,OAEZ,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACF,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS/J,QAAS,EAAGyB,MAAO,CAAEuI,aAAc,SAE5E,kBAACC,GAAA,EAAD,CAAOC,QAAQ,SAASC,SAAS,QAC7B,oEAA6C,6BADjD,8DAE+D,6BAF/D,sBAGuB,uBAAGhC,KAAMgB,GAAWA,MAK7C,kBAACQ,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS/J,QAAS,EAAGyB,MAAO,CAACuI,aAAc,SACjE,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGvI,UAAWoH,EAAQ9B,UAClD,kBAACrG,EAAA,EAAD,CAAMe,UAAWoH,EAAQ9B,UACvB,kBAACpG,EAAA,EAAD,CAAaO,MAAO,CAAC+I,UAAW,WAC9B,kBAAChJ,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KAAapC,EAAK6G,iBAAmB,OAAxB,OAAiCwD,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAagB,UAA3D,QAIN,kBAACZ,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGvI,UAAWoH,EAAQ9B,UAClD,kBAACrG,EAAA,EAAD,CAAMe,UAAWoH,EAAQ9B,UACvB,kBAACpG,EAAA,EAAD,CAAaO,MAAO,CAAC+I,UAAW,WAC9B,kBAAChJ,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,KAAapC,EAAK6G,iBAAmB,OAAxB,OAAiCwD,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAaiB,SAA3D,QAIN,kBAACb,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGvI,UAAWoH,EAAQ9B,UAClD,kBAACrG,EAAA,EAAD,CAAMe,UAAWoH,EAAQ9B,UACvB,kBAACpG,EAAA,EAAD,CAAaO,MAAO,CAAC+I,UAAW,WAC9B,kBAAChJ,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,gBAAciI,QAAd,IAAcA,OAAd,EAAcA,EAAakB,UAOrC,kBAAChB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACjB,GAAD,KACE,kBAACG,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,EAAD,CAAS3J,KAAMA,KAEjB,kBAACwL,EAAA,EAAD,MACA,kBAAC7B,GAAD,KAAoB,kBAAC,GAAD,CAAO3J,KAAMA,MAEnC,kBAACwL,EAAA,EAAD,CAAQ9E,KAAK,OACZ1G,EAAKqD,iBAAiBwF,SAAS,OAAS,kBAAC,GAAD,CAAiB7I,KAAMA,IAChE,kBAACwL,EAAA,EAAD,CAAQ9E,KAAK,OACb,6BACE,kBAAClE,EAAA,EAAD,CAAQC,QAASqF,EAAUlF,UAAU,wBAArC,qBAIF,kBAAC4I,EAAA,EAAD,CAAQ9E,KAAK,UAIhB1G,EAGH,kBAACyL,EAAA,EAAD,MAFA,kBAAC,GAAD,O,oECrGAC,GAA2B3N,cAAiB,SAAqB2C,EAAOiL,GAC1E,IAAIC,EAAwBlL,EAAMmL,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5D5B,EAAUtJ,EAAMsJ,QAChBpH,EAAYlC,EAAMkC,UAClBkJ,EAAQC,aAAyBrL,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoB3C,gBAAoB,MAAOiO,aAAS,CACtDpJ,UAAWqJ,mBAAKjC,EAAQkC,KAAMtJ,GAAYiJ,GAAkB7B,EAAQpJ,SACpE+K,IAAKA,GACJG,OA6BUK,gBAtDK,CAElBD,KAAM,CACJE,QAAS,OACTC,WAAY,SACZC,QAAS,GAIX1L,QAAS,CACP,yBAA0B,CACxB2L,WAAY,KA2CgB,CAChCjC,KAAM,kBADO6B,CAEZT,ICfYc,GAzCE,SAAC,GAAY,IAAXxM,EAAU,EAAVA,KACjB,OACE,kBAACyK,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACtJ,EAAA,EAAD,CAAMiJ,QAAQ,YACZ,kBAAChJ,EAAA,EAAD,KACE,kBAACyI,EAAA,EAAD,CAAKlI,MAAO,CAACoK,SAAU,aACrB,kBAAClC,EAAA,EAAD,CACElI,MAAO,CACLoK,SAAU,WACVC,MAAO,MACPC,IAAK,OACLxE,OAAQ,OACRyE,MAAO,OACPC,aAAc,OACdC,gBAAiB,UACjBT,WAAY,SACZD,QAAS,OACTW,eAAgB,WAGlB,kBAAC/K,EAAA,EAAD,CAAa0E,KAAM,GAAIzE,OAAQjC,EAAKqD,oBAEtC,kBAACjB,EAAA,EAAD,CAAY0I,QAAQ,KAAKkC,UAAU,MAChChN,EAAKqD,kBAER,kBAACjB,EAAA,EAAD,CAAYG,MAAM,iBAAlB,WAEWvC,EAAKqD,iBAAiB4J,cAFjC,oBAE0DjN,EAAK3B,kBAInE,kBAAC,GAAD,CAAagE,MAAO,CAAC0K,eAAgB,aACnC,kBAACvK,EAAA,EAAD,CAAQI,UAAU,uBAAuBoK,UAAWE,KAAMC,GAAE,gBAAWnN,EAAKK,WAA5E,YC9BK+M,GALE,WAEf,MAAO,CADS7H,qBAAW8B,MAApBC,Q,+BCeH+F,GAAkBC,YAAH,+JAECC,MAsGPC,GA7FF,WACX,MAAgBJ,KAAT9F,EAAP,oBACQmG,EAASC,cAATD,KACAtD,EAAYC,cAAZD,QACFwD,EAAcrG,EAAMsG,QAAO,SAAC5N,GAAD,OAAWA,EAAK6N,YACjD,OACE,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACN,KAAMA,GACjB,kBAACJ,GAAD,MACA,kBAACW,GAAA,EAAD,KACE,+BAfE,uBAiBD7D,EACD,kBAAC8D,GAAA,EAAD,CAAWC,SAAS,MAKlB,kBAAC3D,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAK2D,OAAwE,IAAhER,EAAYC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eAAmBC,QAChE,kBAACjM,EAAA,EAAD,CAAYG,MAAM,aAAa+L,MAAM,SAASxD,QAAQ,KAAKyD,cAAY,GAAvE,yCAUA,kBAAC9D,EAAA,EAAD,CAAMC,WAAS,EAAC9J,QAAS,EAAGyB,MAAO,CAAE2E,UAAW,SAC7C2G,EACEC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eACtBI,KAAI,SAACxO,GAAD,OACH,kBAAC,IAAMyO,SAAP,CAAgBC,IAAK1O,EAAKsK,MACxB,kBAAC,GAAD,CAAUtK,KAAMA,UAM1B,yBAAKmO,OAAwE,IAAhER,EAAYC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eAAmBC,QAChE,kBAACjM,EAAA,EAAD,CAAYG,MAAM,cAAcuI,QAAQ,KAAKyD,cAAY,EAAClM,MAAO,CAAE2E,UAAW,SAA9E,0BAGA,kBAAC6D,GAAA,EAAD,CAAOC,QAAQ,SAASC,SAAS,WAAjC,4DAGA,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAAC9J,QAAS,EAAGyB,MAAO,CAAE2E,UAAW,OAAQoF,QAAS,OAAQC,WAAY,WAClFsB,EACEC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eACtBI,KAAI,SAACxO,GAAD,OACH,kBAAC,IAAMyO,SAAP,CAAgBC,IAAK1O,EAAKsK,MACxB,kBAAC,GAAD,CAAUtK,KAAMA,UAM1B,yBAAKmO,OAAwE,IAAhER,EAAYC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eAAmBC,QAChE,kBAACjM,EAAA,EAAD,CAAYG,MAAM,cAAcuI,QAAQ,KAAKyD,cAAY,EAAClM,MAAO,CAAE2E,UAAW,SAA9E,iBAGA,kBAAC6D,GAAA,EAAD,CAAOC,QAAQ,SAASC,SAAS,WAAjC,2FAGA,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAAC9J,QAAS,EAAGyB,MAAO,CAAE2E,UAAW,SAC7C2G,EACEC,QAAO,SAAC5N,GAAD,OAA+B,IAArBA,EAAKoO,eACtBI,KAAI,SAACxO,GAAD,OACH,kBAAC,IAAMyO,SAAP,CAAgBC,IAAK1O,EAAKsK,MACxB,kBAAC,GAAD,CAAUtK,KAAMA,YAQ9B,kBAACyL,EAAA,EAAD,OAGJ,kBAAC,IAAD,CAAOgC,KAAI,UAAKA,EAAL,aACT,kBAACJ,GAAD,MACA,kBAAC,GAAD,W,iCCpHV,6BA2BenN,IAtBf,WACE,IAAMyO,EAAiBC,cACjBC,EAAWC,cAEjB,OAAO9P,uBACL,SAAC+P,EAAuCC,GACtCD,EACGE,MAAK,SAACC,GAAD,OAAQP,EAAeO,EAAI,CAACF,eACjC3P,OAAM,SAACC,GACN,IAAIA,EAAI6P,QAAQtG,SAAS,eAAzB,CAIA,IAAMsG,EAAO,oBAAgBH,EAAQ,GAAGI,eAA3B,OAA2CJ,EAAQK,MAAM,IACtE9P,QAAQC,MAAR,UAAiB2P,EAAjB,aAA6B7P,EAAI6P,SAAW7P,EAAIG,QAChDoP,EAAS,CAACrP,MAAO,CAAC2P,UAAS1P,MAAOH,EAAI6P,SAAW7P,EAAIG,eAG3D,CAACoP,EAAUF,M,uECdHhI,E,iEAHN2I,EAAiBC,IAAOC,UAAUC,WAClCC,EAAsBlR,IAAUC,KAAK,8B,SAE/BkI,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,KA8CGzB,IAtCf,SAAoByK,EAAcC,GAChC,IAAMC,EAAkBC,YAAsBH,EAAMxK,QAASyK,GACvDG,EAAmBC,YAAaL,EAAOC,EAASC,GAGhDI,EAA+B1O,mBAAQ,WAE3C,OAAKwO,EAGEA,EAAiBG,GAAGR,GACvBG,EACElJ,EAAcG,QACdH,EAAcwJ,aAChBxJ,EAAcC,SAPYD,EAAcI,UAQ3C,CAACgJ,EAAkBF,IAEhBlB,EAAiBC,cAEjBvJ,EAAUrG,sBAAW,sBAAC,4BAAAC,EAAA,yDACtBgR,IAAkBtJ,EAAcwJ,aADV,uBAExB5Q,QAAQC,MAAM,oCAFU,0CAMHmQ,EAAMtK,QAAQuK,EAASN,GANpB,OAMpBc,EANoB,OAO1BzB,EAAeyB,EAAU,CACvBpB,QAAQ,WAAD,OAAaW,EAAM1N,QAC1BoO,SAAU,CACRC,aAAcX,EAAMxK,QACpByK,QAASA,KAXa,2CAczB,CAACK,EAAeN,EAAOC,EAASjB,IAEnC,MAAO,CAACsB,EAAe5K,K,iGC3CnBkL,E,MAAiBhQ,EAAOC,IAAV,sOASD,SAACE,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGnCmB,EAd2B,SAAC,GAAD,IAAEyO,EAAF,EAAEA,SAAF,OAAgB,kBAACD,EAAD,KAAiBC,K,0GCM5D/E,EATM,WACnB,OACE,kBAAClB,EAAA,EAAD,CAAKlI,MAAO,CAACoK,SAAU,WAAYE,IAAK,MAAO8D,KAAM,MAAOC,UAAW,0BACrE,kBAACC,EAAA,EAAD,S,oBCPNC,EAAOhT,QAAU,IAA0B,wC,iGCYrCiT,E,MAActQ,EAAOC,IAAV,qEAKF2B,EATqB,SAAC,GAAa,IAAZtE,EAAW,EAAXA,MACpC,OAAO,kBAACgT,EAAD,KAAchT,K,2ICCjBiT,EAAavQ,IAAOC,IAAV,0BAEDuQ,EAJQ,SAAC,GAAD,IAAEP,EAAF,EAAEA,SAAF,OAAgB,kBAACM,EAAD,KAAaN,ICSrCQ,EAZsB,SAAC,GAAa,IAAZzO,EAAW,EAAXA,MACvB+C,EAAcC,qBAAWC,KAAhCjD,MACP,OACE,kBAAC,EAAD,KACE,yBAAK4F,OAAO,KAAK8I,QAAQ,YAAYrE,MAAM,MACzC,0BAAM1O,EAAE,gBAAgBgT,KAAK,SAC7B,0BAAMhT,EAAE,sCAAsCgT,KAAM3O,GAAgB+C,EAAW4B,KAAK,UCM7EiK,EAZyB,SAAC,GAAa,IAAZ5O,EAAW,EAAXA,MAC1B+C,EAAcC,qBAAWC,KAAhCjD,MACP,OACE,kBAAC,EAAD,KACE,yBAAK0O,QAAQ,YAAYC,KAAM3O,GAAgB+C,EAAW4B,KAAK,KAAM0F,MAAM,OAAOzE,OAAO,QACvF,0BAAMjK,EAAE,gBAAgBgT,KAAK,SAC7B,0BAAMhT,EAAE,0B,oHCoBVkT,EAAe7Q,IAAO8Q,OAAV,ieAKF,SAAC3Q,GAAD,MAAmD,wBACxD,SAACA,GAAD,OAAaA,EAAMgC,SAAuB,OAAZ,aAUrB,SAAChC,GAAD,OAAaA,EAAMgC,SAAuB,YAAZ4O,KAU5CxI,EAAavI,YAAO2M,IAAP3M,CAAH,qNAOF,SAACG,GAAD,OAAYA,EAAMC,MAAMC,QAAQ,MAC/B,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAI/BqG,EAzD+B,SAAC,GAAuC,IAAtCuJ,EAAqC,EAArCA,SAAU9N,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,QAAS0K,EAAQ,EAARA,GAC3E,OACE,kBAACiE,EAAD,CAAc1O,SAAUA,EAAUD,QAASA,GACtC0K,EAAK,kBAACrE,EAAD,CAAYqE,GAAIA,GAAKqD,GAAyBA,K,yGCetDe,EAAehR,IAAOC,IAAV,+DACN,SAACE,GAAD,OAAWA,EAAMgG,QAClB,SAAChG,GAAD,OAAWA,EAAMgG,QAGb8E,EA5BuB,SAAC,GAAmB,IAGpDgG,EAHmD,IAAjB9K,YAAiB,MAAV,KAAU,EAChD9F,EAAW2E,qBAAWC,KAAtB5E,QAGP,OAAQ8F,GACN,IAAK,KACH8K,EAAI5Q,EAAQ,GACZ,MACF,IAAK,KACH4Q,EAAI5Q,EAAQ,GACZ,MACF,IAAK,KACL,QACE4Q,EAAI5Q,EAAQ,GAGhB,OAAO,kBAAC2Q,EAAD,CAAc7K,KAAM8K,M,8FCCdC,IAnBI,SAACC,GAClB,MAAwBnT,qBAAxB,mBAAOoT,EAAP,KAAaC,EAAb,KACOC,EAAeC,cAAfD,YACDjT,EAAcC,cAapB,OAXAO,qBAAU,WAAM,4CACd,sBAAAH,EAAA,2EAEI2S,EAFJ,SAEkBhT,EAAYmT,UAAUL,GAFxC,kFAIInS,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdwS,KACC,CAACJ,EAAShT,EAAaiT,EAAaH,IAEhCC,I,iCCrBT,6BAqBe5L,IAhBA,SAAC/F,GACd,IAAMpB,EAAcC,cACdoB,EAA2BC,cAWjC,MAAO,CAAC4F,MATU9G,uBAChB,SAACqH,EAAsBjF,EAAmB2B,GACxC9C,EACErB,EAAYqT,MAAM5L,EAAcjF,EAAW2B,GADrB,cAEfA,EAFe,eAEF/C,EAAKqD,iBAFH,QAK1B,CAACrD,EAAMpB,EAAaqB,O,6FCYT4F,IAtBsB,SAACqM,EAAyBC,GAC7D,MAAkE5T,mBAAS,KAA3E,mBAAOqH,EAAP,KAAkCwM,EAAlC,KACMxT,EAAcC,cACdC,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAaE,WAE1BC,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,sEACTL,EAAYyT,8BAA8BH,EAAiBC,GADlD,OACzBzT,EADyB,OAE/B0T,EAA6B1T,GAFE,2CAG9B,CAACyT,EAAaD,EAAiBtT,IAWlC,OATAQ,qBAAU,WACR,GAAIN,EAAY,CACdC,IAAeM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAIG,UAEhD,IAAM6S,EAAmC3S,YAAYZ,EAAca,IAAOC,iBAC1E,OAAO,kBAAMC,cAAcwS,OAE5B,CAACxT,EAAYsT,EAA8BxT,EAAaG,IAEpD6G,I,qCCdGe,E,mPAHN2I,EAAiBC,IAAOC,UAAUC,WAClCC,EAAsBlR,IAAUC,KAAK,8B,SAE/BkI,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,KAqDG4L,I,IAAAA,EA7Cf,SAA0BlM,GACxB,IACIsJ,EADE/Q,EAAcC,cAEhBwH,IAAiBmM,IAAY7C,EAAQ/Q,EAAY6T,IAC5CpM,IAAiBqM,IAAa/C,EAAQ/Q,EAAY8J,KAClDrC,IAAiBsM,IAAehD,EAAQ/Q,EAAYgK,OACpDvC,IAAiBuM,MAAYjD,EAAQ/Q,EAAYiU,eAAeD,MACzE,IAAM/C,EAAkBC,YAAsBH,EAAMxK,QAAS2N,KACvD/C,EAAmBC,YAAaL,EAAOmD,IAAoBjD,GAG3DI,EAA+B1O,mBAAQ,WAE3C,OAAIoO,IAAU/Q,EAAY6T,IAAY9L,EAAcC,SAC/CmJ,EAGEA,EAAiBG,GAAGR,GACvBG,EACElJ,EAAcG,QACdH,EAAcwJ,aAChBxJ,EAAcC,SAPYD,EAAcI,UAQ3C,CAACgJ,EAAkBF,EAAiBF,EAAO/Q,IAExC+P,EAAiBC,cAEjBvJ,EAAUrG,sBAAW,sBAAC,4BAAAC,EAAA,yDACtBgR,IAAkBtJ,EAAcwJ,aADV,uBAExB5Q,QAAQC,MAAM,oCAFU,0CAMHmQ,EAAMtK,QAAQyN,IAAoBxD,GAN/B,OAMpBc,EANoB,OAO1BzB,EAAeyB,EAAU,CACvBpB,QAAQ,WAAD,OAAaW,EAAM1N,QAC1BoO,SAAU,CACRC,aAAcX,EAAMxK,QACpByK,QAASkD,OAXa,2CAczB,CAAC7C,EAAeN,EAAOhB,IAE1B,MAAO,CAACsB,EAAe5K,I,SC0EnBL,EAAqBzE,IAAOC,IAAV,+DACZ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAChC,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGpCmS,EAAwBxS,IAAOC,IAAV,+KAEhB,SAACE,GAAD,OAAWA,EAAMC,MAAM4B,MAAM2E,KAAK,QAOvC8L,EAAiB7G,YAAW,CAChCD,KAAM,CACJY,gBAAiB,QACjBvK,MAAO,UACP,UAAW,CACTuK,gBAAiB,OACjBvK,MAAO,WAET0Q,SAAU,CACRnG,gBAAiB,WATAX,CAYpB+G,KAEY9M,IAzIsB,SAAC,GAA2D,IAA1DtC,EAAyD,EAAzDA,UAAyD,KAA9CC,UAA8C,EAAnC3C,kBAAmC,MAAvB,GAAuB,MAAnByC,gBAAmB,MAAR,GAAQ,EACxFjF,EAAcC,cACbH,EAAW0L,cAAX1L,QACDyU,GAAc3R,OAAO9C,GAAW,MAAMgD,QAAQ,GAAG0R,WACjDC,EAAc3N,YAAgB9G,EAAY8J,MAC1C4K,EAAgB5N,YAAgB9G,EAAYgK,QAC5C2K,EAAa7N,YAAgB9G,EAAY4U,KAC/C,EAAsBjV,mBAAS,IAA/B,mBAAOyF,EAAP,KAAYC,EAAZ,KACA,EAAwC1F,mBAASiU,KAAjD,mBAAOnM,EAAP,KAAqBoN,EAArB,KACA,EAAsDlV,mBAAS4U,GAA/D,mBAAOO,EAAP,KAA4BC,EAA5B,KACA,EAAgCpV,mBAAS,CAACqV,OAAQ,IAAKC,OAAQ,MAA/D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6CxB,EAAiBlM,GAA9D,oBAAO2N,GAAP,MAA4BC,GAA5B,MACMC,GAAiBzC,YAAW,gBAC5B0C,GAAmB1C,YAAW,iBAC9B2C,GAAc7S,mBAAQ,kBAAO2S,IAAkC,OAAO,CAACA,KACvEG,GAAgB9S,mBAAQ,kBAAO4S,IAAsC,OAAO,CAACA,KAC7EG,GAAiBlT,EAAUmT,WAAW7B,KAArB,OAAoC0B,SAApC,IAAoCA,QAApC,EAAoCA,GAAaI,UAAjD,OAA6DH,SAA7D,IAA6DA,QAA7D,EAA6DA,GAAeG,UASnG,IAeMpQ,GAAY,uCAAG,WAAOC,GAAP,eAAApF,EAAA,yDACW,KAA1BoF,EAAEC,cAAczG,OAA0C,IAA1BwG,EAAEC,cAAczG,QAClDoG,EAAOI,EAAEC,cAAczG,OACvBkW,EAAY,CAACH,OAAQ,IAAKC,OAAQ,OArBnBY,EAuBFpQ,EAAEC,cAAczG,OAtBvBoI,MAAMyO,WAAWD,KAAOE,SAASF,GAiBtB,wDAMnBxQ,EAAOI,EAAEC,cAAczG,OANJ,SAOOe,EAAYgW,cAAcvO,EAAcjF,EAAWyT,OAAOxQ,EAAEC,cAAczG,QAPjF,OAObiX,EAPa,OAQnBf,EAAY,CAACH,OAAQkB,EAAY,GAAG1B,WAAYS,OAAQiB,EAAY,GAAG1B,aARpD,iCAlBrB,IAAmBqB,IAkBE,OAAH,sDAWZlQ,GAAe,uCAAG,4BAAAtF,EAAA,6DACtBgF,EAAOyP,GADe,SAEI9U,EAAYgW,cAAcvO,EAAcjF,EAAWyT,OAAOnB,IAF9D,OAEhBoB,EAFgB,OAGtBf,EAAY,CAACH,OAAQkB,EAAY,GAAG1B,WAAYS,OAAQiB,EAAY,GAAG1B,aAHjD,2CAAH,qDAMrB,OACE,kBAAC5O,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAI,iBAAYtD,KAE5B,kBAAC4D,EAAD,MACA,kBAAC+P,EAAA,EAAD,CAAY1S,MAAO,CAACE,MAAO,WAAYyS,GAAG,SAA1C,4BAGA,kBAACC,EAAA,EAAD,CAAQpQ,SAxCc,SAACqQ,GACzB,IAAMrX,EAAQqX,EAAMlM,OAAOnL,MAC3B4V,EAAgB5V,GAChB8V,EAAuBR,GACnB+B,EAAMlM,OAAOnL,QAAU8U,KACzBgB,EAAuB/R,YAAkB0R,EAAezP,IAEtDqR,EAAMlM,OAAOnL,QAAU6U,KACzBiB,EAAuB/R,YAAkByR,EAAaxP,IAEpDqR,EAAMlM,OAAOnL,QAAU+U,KACzBe,EAAuB/R,YAAkB2R,EAAY1P,KA6BhBxB,MAAO,CAACE,MAAO,WAAY4S,QAAQ,QAAQH,GAAG,SAASnX,MAAOwI,GACjG,kBAAC2M,EAAD,CAAgBnV,MAAO2U,KAAvB,OACA,kBAACQ,EAAD,CAAgBnV,MAAO8U,KAAvB,WAKF,kBAAChO,EAAA,EAAD,CACEC,YAAaL,GACbM,SAAUT,GACVvG,MAAOmG,EACPJ,IAAK8P,EACLzR,OAAQoE,IAEV,kBAAC+O,EAAA,EAAD,CAAO1Q,KAAK,oBACZ,kBAACqO,EAAD,KACG,IACA3R,EAFH,KAEgBI,OAAOsS,EAASF,QAAUpS,OAAO8S,KAEjD,kBAACvB,EAAD,KACG,IADH,IAEIvR,OAAOsS,EAASF,QAFpB,IAE8BxS,EAAUmT,WAAW5B,KAAiBA,IAAgBH,IAFpF,KAEkG,IAC/FhR,OAAOsS,EAASD,QAHnB,IAG6BzS,EAAUmT,WAAW5B,KAAiBH,IAAaG,IAHhF,IAGgG,KAEhG,kBAAC7N,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CACED,MAAM,UACNuI,QAAQ,YACRrI,QAAS,kBACPuR,KAAwBrN,EAAcC,SAAWqN,KAAkBnQ,EAAUuC,EAAcjF,EAAW4C,KAGvGgQ,KAAwBrN,EAAcC,SAAW,UAAY,aAIlE,kBAAC5B,EAAD,MACA,kBAAC6F,EAAA,EAAD,CAAOC,QAAQ,SAASC,SAAS,QAAjC,yC,6GC7GAsK,EAAmB9U,IAAOC,IAAV,0MAIF,SAACE,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAClC,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAM1C0U,EAAc/U,IAAOgV,GAAV,uHAQXC,EAAiBjV,IAAOkV,GAAV,wIACT,SAAC/U,GAAD,OAAWA,EAAMC,MAAM4B,MAAM2E,KAAK,QAQ9BiC,EAtC+B,SAAC,GAA4B,EAA3BC,KAA4B,IAAtBE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,MAC9D,OACE,kBAACgM,EAAD,KAEE,kBAACC,EAAD,KAAcjM,GACd,kBAACmM,EAAD,KAAiBlM","file":"static/js/11.7eb9d6c8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 2v11h3v9l7-12h-4l4-8z\"\n}), 'FlashOn');\n\nexports.default = _default;","import {useCallback, useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\nimport useBombFinance from './useBombFinance';\r\nimport {ContractName} from '../bomb-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n  const isUnlocked = bombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await bombFinance.earnedFromBank(poolName, earnTokenName, poolId, bombFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, bombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, bombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {Bank} from '../bomb-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      bombFinance.harvest(bank.contract, bank.poolId),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, bombFinance, handleTransactionReceipt]);\r\n\r\n  return {onReward: handleReward};\r\n};\r\n\r\nexport default useHarvest;\r\n","import React, {useMemo} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\n// import CardContent from '../../../components/CardContent';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport Value from '../../../components/Value';\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\n\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {Bank} from '../../../bomb-finance';\r\nimport useBombStats from '../../../hooks/useBombStats';\r\nimport useShareStats from '../../../hooks/usebShareStats';\r\n\r\ninterface HarvestProps {\r\n  bank: Bank;\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({bank}) => {\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const {onReward} = useHarvest(bank);\r\n  const bombStats = useBombStats();\r\n  const tShareStats = useShareStats();\r\n\r\n  const tokenName = bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\r\n  const tokenStats = bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <CardIcon>\r\n              <TokenSymbol symbol={bank.earnToken.symbol} />\r\n            </CardIcon>\r\n            <Value value={getDisplayBalance(earnings)} />\r\n                          <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>\r\n                      {`≈ $${earnedInDollars}`}\r\n                    </Typography>\r\n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\r\n                  <Typography style={{textTransform: 'uppercase', color: '#f9d749'}}>\r\n              {`${tokenName} Earned`}\r\n                    </Typography>\r\n             {/* <Label text={`${tokenName} Earned`} /> */}\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button\r\n              onClick={onReward}\r\n              disabled={earnings.eq(0)}\r\n              className={earnings.eq(0) ? 'shinyButtonDisabled' : 'shinyButton'}\r\n            >\r\n              Claim\r\n            </Button>\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Harvest;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {Bank} from '../bomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {parseUnits} from 'ethers/lib/utils';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        bombFinance.stake(bank.contract, bank.poolId, amountBn),\r\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, bombFinance, handleTransactionReceipt],\r\n  );\r\n  return {onStake: handleStake};\r\n};\r\n\r\nexport default useStake;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport {BigNumber} from 'ethers';\r\nimport useBombFinance from './useBombFinance';\r\nimport {ContractName} from '../bomb-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n  const isUnlocked = bombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await bombFinance.stakedBalanceOnBank(poolName, poolId, bombFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, bombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, bombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {Bank} from '../bomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {parseUnits} from 'ethers/lib/utils';\r\n\r\nconst useWithdraw = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        bombFinance.unstake(bank.contract, bank.poolId, amountBn),\r\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, bombFinance, handleTransactionReceipt],\r\n  );\r\n  return {onWithdraw: handleWithdraw};\r\n};\r\n\r\nexport default useWithdraw;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  decimals: number;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({max, decimals, onConfirm, onDismiss, tokenName = ''}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Deposit ${tokenName}`} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\r\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = '', decimals = 18}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Withdraw ${tokenName}`} />\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n        {/* <Button color=\"secondary\" onClick={onDismiss}>Cancel</Button> */}\r\n\r\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React, {useMemo, useContext} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// import Button from '../../../components/Button';\r\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\r\n// import Card from '../../../components/Card';\r\n// import CardContent from '../../../components/CardContent';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport {AddIcon, RemoveIcon} from '../../../components/icons';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '../../../components/IconButton';\r\n//import Label from '../../../components/Label';\r\nimport Value from '../../../components/Value';\r\nimport {ThemeContext} from 'styled-components';\r\n\r\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useStake from '../../../hooks/useStake';\r\nimport useZap from '../../../hooks/useZap';\r\nimport useStakedBalance from '../../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useWithdraw from '../../../hooks/useWithdraw';\r\n\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport ZapModal from './ZapModal';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {Bank} from '../../../bomb-finance';\r\n\r\ninterface StakeProps {\r\n  bank: Bank;\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({bank}) => {\r\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\r\n\r\n  const {color: themeColor} = useContext(ThemeContext);\r\n  const tokenBalance = useTokenBalance(bank.depositToken);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const earnedInDollars = (\r\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n  const {onStake} = useStake(bank);\r\n  const {onZap} = useZap(bank);\r\n  const {onWithdraw} = useWithdraw(bank);\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onStake(amount);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentZap, onDissmissZap] = useModal(\r\n    <ZapModal\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(zappingToken, tokenName, amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onZap(zappingToken, tokenName, amount);\r\n        onDissmissZap();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onWithdraw(amount);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <CardIcon>\r\n              <TokenSymbol symbol={bank.depositToken.symbol} size={54} />\r\n            </CardIcon>\r\n            <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\r\n\r\n            \r\n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\r\n\r\n                 <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>\r\n                      {`≈ $${earnedInDollars}`}\r\n            </Typography>\r\n               <Typography style={{textTransform: 'uppercase', color: '#f9d749'}}>\r\n              {`${bank.depositTokenName} Staked`}\r\n                    </Typography>\r\n            {/* <Label text={`${bank.depositTokenName} Staked`} /> */}\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED ? (\r\n              <Button\r\n                disabled={\r\n                  bank.closedForStaking ||\r\n                  approveStatus === ApprovalState.PENDING ||\r\n                  approveStatus === ApprovalState.UNKNOWN\r\n                }\r\n                onClick={approve}\r\n                className={\r\n                  bank.closedForStaking ||\r\n                  approveStatus === ApprovalState.PENDING ||\r\n                  approveStatus === ApprovalState.UNKNOWN\r\n                    ? 'shinyButtonDisabled'\r\n                    : 'shinyButton'\r\n                }\r\n                style={{marginTop: '20px'}}\r\n              >\r\n                {`Approve ${bank.depositTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <IconButton onClick={onPresentWithdraw}>\r\n                  <RemoveIcon />\r\n                </IconButton>\r\n                <StyledActionSpacer />\r\n                <IconButton\r\n                  disabled={\r\n                    bank.closedForStaking ||\r\n                    bank.depositTokenName === 'BOMB-BSHARE-LP' ||\r\n                    bank.depositTokenName === 'BOMB-BTCB-LP'\r\n                  }\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\r\n                >\r\n                  <FlashOnIcon style={{color: themeColor.grey[400]}} />\r\n                </IconButton>\r\n                <StyledActionSpacer />\r\n                <IconButton\r\n                  disabled={bank.closedForStaking}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\r\n                >\r\n                  <AddIcon />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Stake;\r\n","import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\nimport {Bank, ContractName} from '../bomb-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const {banks} = useContext(BanksContext);\r\n  return banks.find((bank) => bank.contract === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","import {useCallback, useState, useEffect} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {Bank} from '../bomb-finance';\r\nimport {PoolStats} from '../bomb-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await bombFinance.getPoolAPRs(bank));\r\n  }, [bombFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, bombFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {Bank} from '../bomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useRedeem = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleRedeem = useCallback(() => {\r\n    handleTransactionReceipt(bombFinance.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\r\n  }, [bank, bombFinance, handleTransactionReceipt]);\r\n\r\n  return {onRedeem: handleRedeem};\r\n};\r\n\r\nexport default useRedeem;\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {useParams} from 'react-router-dom';\r\nimport {useWallet} from 'use-wallet';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Box, Button, Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Spacer from '../../components/Spacer';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useBank from '../../hooks/useBank';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport useRedeem from '../../hooks/useRedeem';\r\nimport {Bank as BankEntity} from '../../bomb-finance';\r\nimport useBombFinance from '../../hooks/useBombFinance';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Bank: React.FC = () => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const classes = useStyles();\r\n  const {bankId} = useParams();\r\n  const bank = useBank(bankId);\r\n\r\n  const {account} = useWallet();\r\n  const {onRedeem} = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n\r\n  let vaultUrl: string;\r\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\r\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\r\n  }\r\n  \r\n   else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\r\n    vaultUrl = 'https://www.bomb.farm/#/bsc/';\r\n  }\r\n  else {\r\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-wbnb';\r\n\r\n  }\r\n\r\n  return account && bank ? (\r\n    <>\r\n      <PageHeader\r\n        icon=\"💣\"\r\n   //     subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\r\n        title={bank?.name}\r\n      />\r\n         <Box mt={5}>\r\n                <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '30px' }}>\r\n\r\n        <Alert variant=\"filled\" severity=\"info\">\r\n            <h3>Our autocompounding vaults are live!</h3><br />\r\n            We support zapping tokens, and auto-compound every 2 hours!<br />\r\n            Check it out here: <a href={vaultUrl}>{vaultUrl}</a>\r\n\r\n\r\n        </Alert></Grid>\r\n        </Box>\r\n      <Box>\r\n        <Grid container justify=\"center\" spacing={3} style={{marginBottom: '50px'}}>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{textAlign: 'center'}}>\r\n                <Typography>APR</Typography>\r\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{textAlign: 'center'}}>\r\n                <Typography>Daily APR</Typography>\r\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{textAlign: 'center'}}>\r\n                <Typography>TVL</Typography>\r\n                <Typography>${statsOnPool?.TVL}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n   \r\n      <Box mt={5}>\r\n        <StyledBank>\r\n          <StyledCardsWrapper>\r\n            <StyledCardWrapper>\r\n              <Harvest bank={bank} />\r\n            </StyledCardWrapper>\r\n            <Spacer />\r\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\r\n          </StyledCardsWrapper>\r\n          <Spacer size=\"lg\" />\r\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\r\n          <Spacer size=\"lg\" />\r\n          <div>\r\n            <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\r\n              Claim &amp; Withdraw\r\n            </Button>\r\n          </div>\r\n          <Spacer size=\"lg\" />\r\n        </StyledBank>\r\n      </Box>\r\n    </>\r\n  ) : !bank ? (\r\n    <BankNotFound />\r\n  ) : (\r\n    <UnlockWallet />\r\n  );\r\n};\r\n\r\nconst LPTokenHelpText: React.FC<{bank: BankEntity}> = ({bank}) => {\r\n  const bombFinance = useBombFinance();\r\n  const bombAddr = bombFinance.BOMB.address;\r\n  const bshareAddr = bombFinance.BSHARE.address;\r\n\r\n  let pairName: string;\r\n  let uniswapUrl: string;\r\n // let vaultUrl: string;\r\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\r\n    pairName = 'BOMB-BTCB pair';\r\n    uniswapUrl = 'https://pancakeswap.finance/add/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c/' + bombAddr;\r\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\r\n  }\r\n  else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\r\n    pairName = 'BOMB-BSHARE pair';\r\n    uniswapUrl = 'https://pancakeswap.finance/add/' + bombAddr + '/' + bshareAddr;\r\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\r\n  }\r\n  else {\r\n    pairName = 'BSHARE-BNB pair';\r\n    uniswapUrl = 'https://pancakeswap.finance/add/BNB/' + bshareAddr;\r\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-bnb';\r\n\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledLink href={uniswapUrl} target=\"_blank\">\r\n          {`Provide liquidity for ${pairName} now on PancakeSwap`}\r\n        </StyledLink>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst StyledBank = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.color.primary.main};\r\n`;\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Bank;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Box, Button, Card, CardActions, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\n\r\nconst FarmCard = ({bank}) => {\r\n  return (\r\n    <Grid item xs={12} md={4} lg={4}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Box style={{position: 'relative'}}>\r\n            <Box\r\n              style={{\r\n                position: 'absolute',\r\n                right: '0px',\r\n                top: '-5px',\r\n                height: '48px',\r\n                width: '48px',\r\n                borderRadius: '40px',\r\n                backgroundColor: '#363746',\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <TokenSymbol size={32} symbol={bank.depositTokenName} />\r\n            </Box>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {bank.depositTokenName}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {/* {bank.name} */}\r\n              Deposit {bank.depositTokenName.toUpperCase()} Earn {` ${bank.earnTokenName}`}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n        <CardActions style={{justifyContent: 'flex-end'}}>\r\n          <Button className=\"shinyButtonSecondary\" component={Link} to={`/farm/${bank.contract}`}>\r\n            View\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FarmCard;\r\n","import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const {banks} = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import React from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport Bank from '../Bank';\r\n\r\nimport { Box, Container, Typography, Grid } from '@material-ui/core';\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\nimport FarmCard from './FarmCard';\r\n//import FarmImage from '../../assets/img/farm.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport useBanks from '../../hooks/useBanks';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport HomeImage from '../../assets/img/background.jpg';\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${HomeImage}) repeat !important;\r\n    background-size: cover !important;\r\n    background-color: #171923;\r\n  }\r\n`;\r\n\r\nconst TITLE = 'bomb.money | Farms'\r\n\r\n\r\nconst Farm = () => {\r\n  const [banks] = useBanks();\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const activeBanks = banks.filter((bank) => !bank.finished);\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n\r\n        <Route exact path={path}>\r\n          <BackgroundImage />\r\n          <Helmet>\r\n            <title>{TITLE}</title>\r\n          </Helmet>\r\n          {!!account ? (\r\n            <Container maxWidth=\"lg\">\r\n              {/* <Typography color=\"textYellow\" align=\"center\" variant=\"h3\" gutterBottom>\r\n                Farm\r\n              </Typography> */}\r\n\r\n              <Box mt={5}>\r\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 2).length === 0}>\r\n                  <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom>\r\n                    Earn BSHARE by staking PancakeSwap LP\r\n                  </Typography>\r\n                  {/* <Alert variant=\"filled\" severity=\"info\">\r\n                    <h4>\r\n                      Farms started November 25th 2021 and will continue running for 1 full year.</h4>\r\n\r\n\r\n\r\n                  </Alert> */}\r\n                  <Grid container spacing={3} style={{ marginTop: '20px' }}>\r\n                    {activeBanks\r\n                      .filter((bank) => bank.sectionInUI === 2)\r\n                      .map((bank) => (\r\n                        <React.Fragment key={bank.name}>\r\n                          <FarmCard bank={bank} />\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 1).length === 0}>\r\n                  <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom style={{ marginTop: '20px' }}>\r\n                    Inactive ApeSwap Farms\r\n                  </Typography>\r\n                  <Alert variant=\"filled\" severity=\"warning\">\r\n                    Please remove funds from all farms which are not active.\r\n                  </Alert>\r\n                  <Grid container spacing={3} style={{ marginTop: '20px', display: 'flex', alignItems: 'center' }}>\r\n                    {activeBanks\r\n                      .filter((bank) => bank.sectionInUI === 1)\r\n                      .map((bank) => (\r\n                        <React.Fragment key={bank.name}>\r\n                          <FarmCard bank={bank} />\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\r\n                  <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom style={{ marginTop: '20px' }}>\r\n                    Genesis Pools\r\n                  </Typography>\r\n                  <Alert variant=\"filled\" severity=\"warning\">\r\n                    Genesis pools have ended. Please claim all rewards and remove funds from Genesis pools.\r\n                  </Alert>\r\n                  <Grid container spacing={3} style={{ marginTop: '20px' }}>\r\n                    {activeBanks\r\n                      .filter((bank) => bank.sectionInUI === 0)\r\n                      .map((bank) => (\r\n                        <React.Fragment key={bank.name}>\r\n                          <FarmCard bank={bank} />\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n              </Box>\r\n            </Container>\r\n          ) : (\r\n            <UnlockWallet />\r\n          )}\r\n        </Route>\r\n        <Route path={`${path}/:bankId`}>\r\n          <BackgroundImage />\r\n          <Bank />\r\n        </Route>\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Farm;\r\n","import {useCallback} from 'react';\r\nimport {TransactionResponse} from '@ethersproject/providers';\r\nimport {useTransactionAdder} from '../state/transactions/hooks';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\r\n  const addTransaction = useTransactionAdder();\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<TransactionResponse>, summary: string) => {\r\n      promise\r\n        .then((tx) => addTransaction(tx, {summary}))\r\n        .catch((err) => {\r\n          if (err.message.includes('User denied')) {\r\n            // User denied transaction signature on MetaMask.\r\n            return;\r\n          }\r\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\r\n          console.error(`${message}: ${err.message || err.stack}`);\r\n          addPopup({error: {message, stack: err.message || err.stack}});\r\n        });\r\n    },\r\n    [addPopup, addTransaction],\r\n  );\r\n}\r\n\r\nexport default useHandleTransactionReceipt;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CardIconProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: #363746;\r\n  font-size: 36px;\r\n  height: 95px;\r\n  width: 95px;\r\n  border-radius: 95px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nexport default CardIcon;\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","module.exports = __webpack_public_path__ + \"static/media/background.3761c6a5.jpg\";","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({value}) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface IconProps {\r\n  color?: string;\r\n  children?: string;\r\n}\r\n\r\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\r\n\r\nconst StyledIcon = styled.div``;\r\n\r\nexport default Icon;\r\n","import React, {useContext} from 'react';\r\nimport {ThemeContext} from 'styled-components';\r\n\r\nimport Icon, {IconProps} from '../Icon';\r\n\r\nconst AddIcon: React.FC<IconProps> = ({color}) => {\r\n  const {color: themeColor} = useContext(ThemeContext);\r\n  return (\r\n    <Icon>\r\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\r\n      </svg>\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default AddIcon;\r\n","import React, {useContext} from 'react';\r\nimport {ThemeContext} from 'styled-components';\r\n\r\nimport Icon, {IconProps} from '../Icon';\r\n\r\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\r\n  const {color: themeColor} = useContext(ThemeContext);\r\n  return (\r\n    <Icon>\r\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M19 13H5v-2h14v2z\" />\r\n      </svg>\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default RemoveIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface IconButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\r\n  return (\r\n    <StyledButton disabled={disabled} onClick={onClick}>\r\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  disabled?: boolean;\r\n}\r\n/*\r\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\r\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\r\n */\r\n\r\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\r\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  border: 2px solid;\r\n  border-radius: 28px;\r\n  background-color: #171923;\r\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\r\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 700;\r\n  height: 56px;\r\n  justify-content: center;\r\n  letter-spacing: 1px;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  text-transform: uppercase;\r\n  width: 56px;\r\n\r\n  &:hover {\r\n    background-color: #f9d749;\r\n    color: #171923;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default IconButton;\r\n","import React, {useContext} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\r\n  const {spacing} = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {LPStat} from '../bomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useLpStats = (lpTicker: string) => {\r\n  const [stat, setStat] = useState<LPStat>();\r\n  const {slowRefresh} = useRefresh();\r\n  const bombFinance = useBombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchLpPrice() {\r\n      try {\r\n        setStat(await bombFinance.getLPStat(lpTicker));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchLpPrice();\r\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useLpStats;\r\n","import {useCallback} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {Bank} from '../bomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useZap = (bank: Bank) => {\r\n  const bombFinance = useBombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleZap = useCallback(\r\n    (zappingToken: string, tokenName: string, amount: string) => {\r\n      handleTransactionReceipt(\r\n        bombFinance.zapIn(zappingToken, tokenName, amount),\r\n        `Zap ${amount} in ${bank.depositTokenName}.`,\r\n      );\r\n    },\r\n    [bank, bombFinance, handleTransactionReceipt],\r\n  );\r\n  return {onZap: handleZap};\r\n};\r\n\r\nexport default useZap;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport useBombFinance from './useBombFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const bombFinance = useBombFinance();\r\n  const isUnlocked = bombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await bombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, bombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, bombFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../bomb-finance/ERC20';\r\nimport {BNB_TICKER, BOMB_TICKER, BSHARE_TICKER, BTC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\r\nimport useBombFinance from './useBombFinance';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\r\n  const bombFinance = useBombFinance();\r\n  let token: ERC20;\r\n  if (zappingToken === BNB_TICKER) token = bombFinance.BNB;\r\n  else if (zappingToken === BOMB_TICKER) token = bombFinance.BOMB;\r\n  else if (zappingToken === BSHARE_TICKER) token = bombFinance.BSHARE;\r\n  else if (zappingToken === BTC_TICKER) token = bombFinance.externalTokens[BTC_TICKER];\r\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\r\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (token === bombFinance.BNB) return ApprovalState.APPROVED;\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, bombFinance]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: ZAPPER_ROUTER_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveZapper;\r\n","import React, {useState, useMemo} from 'react';\r\n\r\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport styled from 'styled-components';\r\n\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\nimport Label from '../../../components/Label';\r\nimport useLpStats from '../../../hooks/useLpStats';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\nimport {useWallet} from 'use-wallet';\r\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\r\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\ninterface ZapProps extends ModalProps {\r\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\r\n  const bombFinance = useBombFinance();\r\n  const {balance} = useWallet();\r\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\r\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\r\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\r\n  const btcBalance = useTokenBalance(bombFinance.BTC);\r\n  const [val, setVal] = useState('');\r\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\r\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\r\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\r\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\r\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\r\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\r\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\r\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\r\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\r\n  /**\r\n   * Checks if a value is a valid number or not\r\n   * @param n is the value to be evaluated for a number\r\n   * @returns\r\n   */\r\n  function isNumeric(n: any) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  const handleChangeAsset = (event: any) => {\r\n    const value = event.target.value;\r\n    setZappingToken(value);\r\n    setZappingTokenBalance(ftmBalance);\r\n    if (event.target.value === BSHARE_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\r\n    }\r\n    if (event.target.value === BOMB_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\r\n    }\r\n    if (event.target.value === BTC_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setVal(e.currentTarget.value);\r\n      setEstimate({token0: '0', token1: '0'});\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setVal(e.currentTarget.value);\r\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\r\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\r\n  };\r\n\r\n  const handleSelectMax = async () => {\r\n    setVal(zappingTokenBalance);\r\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\r\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Zap in ${tokenName}`} />\r\n\r\n      <StyledActionSpacer />\r\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\r\n        Select asset to zap with\r\n      </InputLabel>\r\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\r\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\r\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\r\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\r\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\r\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\r\n      </Select>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={zappingTokenBalance}\r\n        symbol={zappingToken}\r\n      />\r\n      <Label text=\"Zap Estimations\" />\r\n      <StyledDescriptionText>\r\n        {' '}\r\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\r\n      </StyledDescriptionText>\r\n      <StyledDescriptionText>\r\n        {' '}\r\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\r\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\r\n      </StyledDescriptionText>\r\n      <ModalActions>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\r\n          }\r\n        >\r\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <StyledActionSpacer />\r\n      <Alert variant=\"filled\" severity=\"info\">\r\n        New feature. Use at your own risk!\r\n      </Alert>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledDescriptionText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 22px;\r\n  justify-content: flex-start;\r\n`;\r\nconst StyledMenuItem = withStyles({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    color: '#2c2560',\r\n    '&:hover': {\r\n      backgroundColor: 'grey',\r\n      color: '#2c2560',\r\n    },\r\n    selected: {\r\n      backgroundColor: 'black',\r\n    },\r\n  },\r\n})(MenuItem);\r\n\r\nexport default ZapModal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 512px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: '#f9d749';\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n"],"sourceRoot":""}